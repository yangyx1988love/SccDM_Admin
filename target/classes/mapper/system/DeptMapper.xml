<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="nankai.xl.system.mapper.DeptMapper">
  <resultMap id="BaseResultMap" type="nankai.xl.system.model.Dept" >
    <id column="dept_id" property="deptId" jdbcType="VARCHAR" />
    <result column="dept_name" property="deptName" jdbcType="VARCHAR" />
    <result column="parent_id" property="parentId" jdbcType="VARCHAR" />
    <result column="order_num" property="orderNum" jdbcType="INTEGER" />
    <result column="dept_level" property="deptLevel" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="modify_time" property="modifyTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    dept_id, dept_name, parent_id, order_num, dept_level, create_time, modify_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from dept
    where dept_id = #{deptId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from dept
    where dept_id = #{deptId,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="nankai.xl.system.model.Dept">
    insert into dept (dept_id, dept_name, parent_id,
      order_num, dept_level, create_time,
      modify_time)
    values (#{deptId,jdbcType=VARCHAR}, #{deptName,jdbcType=VARCHAR}, #{parentId,jdbcType=VARCHAR},
      #{orderNum,jdbcType=INTEGER}, #{deptLevel,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP},
      #{modifyTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="nankai.xl.system.model.Dept" >
    insert into dept
    <trim prefix="(" suffix=")" suffixOverrides="," >
        <if test="deptId != null" >
            dept_id,
        </if>
        <if test="deptName != null" >
            dept_name,
        </if>
        <if test="parentId != null" >
            parent_id,
        </if>
        <if test="orderNum != null" >
            order_num,
        </if>
        <if test="deptLevel != null" >
            dept_level,
        </if>
        <if test="createTime != null" >
            create_time,
        </if>
        <if test="modifyTime != null" >
            modify_time,
        </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
        <if test="deptId != null" >
            #{deptId,jdbcType=VARCHAR},
        </if>
        <if test="deptName != null" >
            #{deptName,jdbcType=VARCHAR},
        </if>
        <if test="parentId != null" >
            #{parentId,jdbcType=VARCHAR},
        </if>
        <if test="orderNum != null" >
            #{orderNum,jdbcType=INTEGER},
        </if>
        <if test="deptLevel != null" >
            #{deptLevel,jdbcType=INTEGER},
        </if>
        <if test="createTime != null" >
            #{createTime,jdbcType=TIMESTAMP},
        </if>
        <if test="modifyTime != null" >
            #{modifyTime,jdbcType=TIMESTAMP},
        </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="nankai.xl.system.model.Dept">
    update dept
    <set >
      <if test="deptId != null" >
          dept_id = #{deptId,jdbcType=VARCHAR},
      </if>
      <if test="deptName != null" >
          dept_name = #{deptName,jdbcType=VARCHAR},
      </if>
      <if test="parentId != null" >
          parent_id = #{parentId,jdbcType=VARCHAR},
      </if>
      <if test="orderNum != null" >
          order_num = #{orderNum,jdbcType=INTEGER},
      </if>
      <if test="deptLevel != null" >
          dept_level = #{deptLevel,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
          create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyTime != null" >
          modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where dept_id = #{deptId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="nankai.xl.system.model.Dept">
    update dept
    set dept_name = #{deptName,jdbcType=VARCHAR},
      parent_id = #{parentId,jdbcType=VARCHAR},
      dept_level = #{deptLevel,jdbcType=INTEGER},
      order_num = #{orderNum,jdbcType=INTEGER}
    where dept_id = #{deptId,jdbcType=VARCHAR}
  </update>
  <select id="selectByParentId" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from dept
    where parent_id = #{parentId}
    order by order_num
  </select>

  <select id="selectAll" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from dept
    order by order_num
  </select>

  <select id="selectChildrenIDByPrimaryKey" resultType="java.lang.String">
    select dept_id
    from dept
    where parent_id = #{deptId, jdbcType=VARCHAR}
  </select>

  <select id="selectMaxOrderNum" resultType="int">
    select ifnull(max(order_num), 0)
    from dept
  </select>
  <update id="swapSort">
    UPDATE
      dept AS per
        JOIN
        dept AS next
        ON
            (per.`dept_id` = #{currentId} AND next.`dept_id` = #{swapId})
            OR
            (per.`dept_id` = #{swapId} AND next.`dept_id` = #{currentId})
    SET per.`order_num`  = next.`order_num`,
        next.`order_num` = per.`order_num`
  </update>
</mapper>