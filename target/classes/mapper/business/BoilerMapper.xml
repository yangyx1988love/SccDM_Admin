<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="nankai.xl.business.mapper.BoilerMapper" >
  <resultMap id="BaseResultMap" type="nankai.xl.business.model.Boiler">
    <id column="ID" jdbcType="INTEGER" property="id" />
    <result column="NK_NO" jdbcType="INTEGER" property="nkNo" />
    <result column="EXHUST_ID" jdbcType="INTEGER" property="exhustId" />
    <result column="version" jdbcType="VARCHAR" property="version" />
    <result column="FUNCTIO" jdbcType="CHAR" property="functio" />
    <result column="MODEL" jdbcType="CHAR" property="model" />
    <result column="TONS" jdbcType="DOUBLE" property="tons" />
    <result column="FUELTYPE" jdbcType="CHAR" property="fueltype" />
    <result column="COALASH" jdbcType="DOUBLE" property="coalash" />
    <result column="COALSULFUR" jdbcType="DOUBLE" property="coalsulfur" />
    <result column="COMBUSTIONSYSTEM" jdbcType="CHAR" property="combustionsystem" />
    <result column="FUEL_AUSAGE" jdbcType="DOUBLE" property="fuelAusage" />
    <result column="FUEL_AUSAGEUNIT" jdbcType="CHAR" property="fuelAusageunit" />
    <result column="dustremove_id" jdbcType="INTEGER" property="dustremoveId" />
    <result column="sulphurremove_id" jdbcType="INTEGER" property="sulphurremoveId" />
    <result column="nitreremove_id" jdbcType="INTEGER" property="nitreremoveId" />
    <result column="pm10" jdbcType="DOUBLE" property="pm10" />
    <result column="pm25" jdbcType="DOUBLE" property="pm25" />
    <result column="co" jdbcType="DOUBLE" property="co" />
    <result column="voc" jdbcType="DOUBLE" property="voc" />
    <result column="pm" jdbcType="DOUBLE" property="pm" />
    <result column="so2" jdbcType="DOUBLE" property="so2" />
    <result column="nox" jdbcType="DOUBLE" property="nox" />
    <result column="nh3" jdbcType="DOUBLE" property="nh3" />
    <result column="oc" jdbcType="DOUBLE" property="oc" />
    <result column="bc" jdbcType="DOUBLE" property="bc" />
    <result column="scc" jdbcType="CHAR" property="scc" />
    <result column="machine_no" jdbcType="VARCHAR" property="machineNo" />
    <result column="coal_volatilisation" jdbcType="DOUBLE" property="coalVolatilisation" />
    <result column="installed_capacity" jdbcType="DOUBLE" property="installedCapacity" />
    <result column="feiqiti" jdbcType="DOUBLE" property="feiqiti" />
    <result column="Jan_useamount" jdbcType="DOUBLE" property="janUseamount" />
    <result column="Feb_useamount" jdbcType="DOUBLE" property="febUseamount" />
    <result column="Mar_useamount" jdbcType="DOUBLE" property="marUseamount" />
    <result column="Apr_useamount" jdbcType="DOUBLE" property="aprUseamount" />
    <result column="May_useamount" jdbcType="DOUBLE" property="mayUseamount" />
    <result column="June_useamount" jdbcType="DOUBLE" property="juneUseamount" />
    <result column="July_useamount" jdbcType="DOUBLE" property="julyUseamount" />
    <result column="aug_useamount" jdbcType="DOUBLE" property="augUseamount" />
    <result column="sept_useamount" jdbcType="DOUBLE" property="septUseamount" />
    <result column="oct_use_amount" jdbcType="DOUBLE" property="octUseAmount" />
    <result column="nov_useamount" jdbcType="DOUBLE" property="novUseamount" />
    <result column="dec_useamount" jdbcType="DOUBLE" property="decUseamount" />
  </resultMap>
  <sql id="Base_Column_List">
    ID, NK_NO, EXHUST_ID, version, FUNCTIO, MODEL,
    TONS, FUELTYPE, COALASH, COALSULFUR, COMBUSTIONSYSTEM, FUEL_AUSAGE, FUEL_AUSAGEUNIT,
    dustremove_id, sulphurremove_id, nitreremove_id, pm10, pm25, co, voc, pm, so2, nox,
    nh3, oc, bc, scc, machine_no, coal_volatilisation, installed_capacity, feiqiti,
     Jan_useamount, Feb_useamount, Mar_useamount, Apr_useamount, May_useamount,
    June_useamount, July_useamount, aug_useamount, sept_useamount, oct_use_amount, nov_useamount,
    dec_useamount
  </sql>
  <select id="selectById" resultType="nankai.xl.business.model.Boiler" parameterType="java.lang.Integer" >
    select * from boiler
    where ID = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectByExhustId" resultType="nankai.xl.business.model.Boiler" parameterType="java.lang.Integer" >
    select * from boiler
    where EXHUST_ID = #{exhustId,jdbcType=INTEGER}
  </select>
  <select id="selectByFactoryId" resultType="nankai.xl.business.model.Boiler" parameterType="java.lang.Integer" >
    SELECT boiler.* FROM boiler
    INNER JOIN exhaust
    ON boiler.EXHUST_ID=exhaust.EXF_ID
    INNER JOIN factory
    ON factory.factory_id=exhaust.FACTORY_ID
    WHERE factory.factory_id=#{factoryId,jdbcType=INTEGER}
    ORDER BY exhaust.NK_NO ASC
  </select>
  <select id="countByCity" resultType="nankai.xl.business.model.vo.SumVo">
    SELECT COUNT(ss.ID) AS value,city.city_name AS name FROM county
    INNER JOIN (
        SELECT boiler.ID,factory.county_id FROM boiler
        INNER JOIN exhaust
        ON exhaust.EXF_ID=boiler.EXHUST_ID
        INNER JOIN factory
        ON exhaust.FACTORY_ID=factory.factory_id
    ) ss
    ON county.COUNTY_ID=ss.county_id
    INNER JOIN city
    ON county.city_code=city.city_code
    GROUP BY county.city_code
  </select>
  <select id="selectSum" resultType="nankai.xl.business.model.vo.BoilerSumVo" parameterType="nankai.xl.business.model.vo.FactorySumCommonQuery" >
    SELECT * FROM(
      SELECT  factory.`year`,factory.factory_name,factory.factory_no,factory.city_code,factory.county_id,factory.city_name,
      factory.COUNTY_NAME,factory.`status`,factory.statusdec,factory.factory_id,
      factory.EXF_MATERIAL,factory.SMOKE_OUTA,
      scc.sccDec,
      boiler.*,sulphurremove.sulphur_method AS sulphurremoveDec,dustremove.dust_remove_name AS dustremoveDec,
      nitreremove.nitre_method AS nitreremoveDec
      FROM boiler
      LEFT JOIN sulphurremove
      ON sulphurremove.id=boiler.sulphurremove_id
      LEFT JOIN dustremove
      ON dustremove.id=boiler.dustremove_id
      LEFT JOIN nitreremove
      ON nitreremove.id=boiler.nitreremove_id
      LEFT JOIN (
        SELECT CONCAT(scc_4.scc_1,scc_4.scc_2,scc_4.scc_3,scc_4.scc_4) AS sccCode,
        CONCAT(scc_1.description,'/',scc_2.description,'/',scc_3.description,'/',scc_4.description) AS sccDec
        FROM scc_4
        LEFT JOIN scc_1
        ON scc_4.scc_1=scc_1.scc_1
        LEFT JOIN scc_2
        ON scc_4.scc_1=scc_2.scc_1 AND scc_4.scc_2=scc_2.scc_2
        LEFT JOIN scc_3
        ON scc_4.scc_1=scc_3.scc_1 AND scc_4.scc_2=scc_3.scc_2 AND scc_4.scc_3=scc_3.scc_3
      )scc
      ON scc.sccCode=boiler.scc
      LEFT JOIN (
        SELECT factory.`year`,factory.factory_name,factory.factory_no,city.city_code,factory.county_id,city.city_name,
        county.COUNTY_NAME,factory.`status`,status.introduction AS statusdec,factory.factory_id,
        exhaust.EXF_MATERIAL,exhaust.SMOKE_OUTA,exhaust.EXF_ID
        FROM exhaust
        LEFT JOIN factory
        ON factory.factory_id=exhaust.FACTORY_ID
        LEFT JOIN county
        ON factory.county_id=county.county_id
        LEFT JOIN city
        ON county.city_code=city.city_code
        LEFT JOIN `status`
        ON factory.`status`=`status`.id
      )factory
      ON factory.EXF_ID=boiler.EXHUST_ID
    )ss
    <where>
      <if test="year != null and year != ''">
        year = #{year}
      </if>
      <if test="countyId != null and countyId != ''">
        AND county_id = #{countyId}
      </if>
      <if test="cityCode != null and cityCode != ''">
        AND city_code = #{cityCode}
      </if>
      <if test="status != null and status != ''">
        AND status = #{status}
      </if>
    </where>
    ORDER BY FACTORY_ID,NK_NO ASC
  </select>
  <select id="countByCounty" resultType="nankai.xl.business.model.vo.SumVo">
    SELECT COUNT(ss.ID) AS value,CONCAT(city.city_name,'-',county.COUNTY_NAME) AS name FROM county
    LEFT JOIN (
    SELECT boiler.ID,factory.county_id FROM boiler
    INNER JOIN exhaust
    ON exhaust.EXF_ID=boiler.EXHUST_ID
    INNER JOIN factory
    ON exhaust.FACTORY_ID=factory.factory_id
    ) ss
    ON county.COUNTY_ID=ss.county_id
    INNER JOIN city
    ON county.city_code=city.city_code
    GROUP BY county.COUNTY_ID
    ORDER BY county.city_code ASC
  </select>
  <update id="updateById" parameterType="nankai.xl.business.model.Boiler" >
    update boiler
    <set>
      <if test="nkNo != null">
        NK_NO = #{nkNo,jdbcType=INTEGER},
      </if>
      <if test="exhustId != null">
        EXHUST_ID = #{exhustId,jdbcType=INTEGER},
      </if>
      <if test="version != null">
        version = #{version,jdbcType=VARCHAR},
      </if>
      <if test="functionDec != null">
        FUNCTION_DEC = #{functionDec,jdbcType=VARCHAR},
      </if>
      <if test="functio != null">
        FUNCTIO = #{functio,jdbcType=CHAR},
      </if>
      <if test="fueltypeDec != null">
        FUELTYPE_DEC = #{fueltypeDec,jdbcType=VARCHAR},
      </if>
      <if test="modelDec != null">
        MODEL_DEC = #{modelDec,jdbcType=VARCHAR},
      </if>
      <if test="model != null">
        MODEL = #{model,jdbcType=CHAR},
      </if>
      <if test="tons != null">
        TONS = #{tons,jdbcType=DOUBLE},
      </if>
      <if test="fueltype != null">
        FUELTYPE = #{fueltype,jdbcType=CHAR},
      </if>
      <if test="coalash != null">
        COALASH = #{coalash,jdbcType=DOUBLE},
      </if>
      <if test="coalsulfur != null">
        COALSULFUR = #{coalsulfur,jdbcType=DOUBLE},
      </if>
      <if test="combustionsystem != null">
        COMBUSTIONSYSTEM = #{combustionsystem,jdbcType=CHAR},
      </if>
      <if test="fuelAusage != null">
        FUEL_AUSAGE = #{fuelAusage,jdbcType=DOUBLE},
      </if>
      <if test="fuelAusageunit != null">
        FUEL_AUSAGEUNIT = #{fuelAusageunit,jdbcType=CHAR},
      </if>
      <if test="dustremoveId != null">
        dustremove_id = #{dustremoveId,jdbcType=INTEGER},
      </if>
      <if test="sulphurremoveId != null">
        sulphurremove_id = #{sulphurremoveId,jdbcType=INTEGER},
      </if>
      <if test="nitreremoveId != null">
        nitreremove_id = #{nitreremoveId,jdbcType=INTEGER},
      </if>
      <if test="pm10 != null">
        pm10 = #{pm10,jdbcType=DOUBLE},
      </if>
      <if test="pm25 != null">
        pm25 = #{pm25,jdbcType=DOUBLE},
      </if>
      <if test="co != null">
        co = #{co,jdbcType=DOUBLE},
      </if>
      <if test="voc != null">
        voc = #{voc,jdbcType=DOUBLE},
      </if>
      <if test="pm != null">
        pm = #{pm,jdbcType=DOUBLE},
      </if>
      <if test="so2 != null">
        so2 = #{so2,jdbcType=DOUBLE},
      </if>
      <if test="nox != null">
        nox = #{nox,jdbcType=DOUBLE},
      </if>
      <if test="nh3 != null">
        nh3 = #{nh3,jdbcType=DOUBLE},
      </if>
      <if test="oc != null">
        oc = #{oc,jdbcType=DOUBLE},
      </if>
      <if test="bc != null">
        bc = #{bc,jdbcType=DOUBLE},
      </if>
      <if test="scc != null">
        scc = #{scc,jdbcType=CHAR},
      </if>
      <if test="machineNo != null">
        machine_no = #{machineNo,jdbcType=VARCHAR},
      </if>
      <if test="coalVolatilisation != null">
        coal_volatilisation = #{coalVolatilisation,jdbcType=DOUBLE},
      </if>
      <if test="installedCapacity != null">
        installed_capacity = #{installedCapacity,jdbcType=DOUBLE},
      </if>
      <if test="feiqiti != null">
        feiqiti = #{feiqiti,jdbcType=DOUBLE},
      </if>
      <if test="so2out != null">
        so2out = #{so2out,jdbcType=DOUBLE},
      </if>
      <if test="pmout != null">
        pmout = #{pmout,jdbcType=DOUBLE},
      </if>
      <if test="noxout != null">
        noxout = #{noxout,jdbcType=DOUBLE},
      </if>
      <if test="janUseamount != null">
        Jan_useamount = #{janUseamount,jdbcType=DOUBLE},
      </if>
      <if test="febUseamount != null">
        Feb_useamount = #{febUseamount,jdbcType=DOUBLE},
      </if>
      <if test="marUseamount != null">
        Mar_useamount = #{marUseamount,jdbcType=DOUBLE},
      </if>
      <if test="aprUseamount != null">
        Apr_useamount = #{aprUseamount,jdbcType=DOUBLE},
      </if>
      <if test="mayUseamount != null">
        May_useamount = #{mayUseamount,jdbcType=DOUBLE},
      </if>
      <if test="juneUseamount != null">
        June_useamount = #{juneUseamount,jdbcType=DOUBLE},
      </if>
      <if test="julyUseamount != null">
        July_useamount = #{julyUseamount,jdbcType=DOUBLE},
      </if>
      <if test="augUseamount != null">
        aug_useamount = #{augUseamount,jdbcType=DOUBLE},
      </if>
      <if test="septUseamount != null">
        sept_useamount = #{septUseamount,jdbcType=DOUBLE},
      </if>
      <if test="octUseAmount != null">
        oct_use_amount = #{octUseAmount,jdbcType=DOUBLE},
      </if>
      <if test="novUseamount != null">
        nov_useamount = #{novUseamount,jdbcType=DOUBLE},
      </if>
      <if test="decUseamount != null">
        dec_useamount = #{decUseamount,jdbcType=DOUBLE},
      </if>
    </set>
    where ID = #{id,jdbcType=INTEGER}
  </update>
</mapper>