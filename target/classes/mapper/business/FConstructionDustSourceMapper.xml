<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="nankai.xl.business.mapper.FConstructionDustSourceMapper" >
  <resultMap id="BaseResultMap" type="nankai.xl.business.model.FConstructionDustSource">
    <id column="construct_dustid" jdbcType="INTEGER" property="constructDustid" />
    <result column="scccode" jdbcType="CHAR" property="scccode" />
    <result column="factoryid" jdbcType="INTEGER" property="factoryid" />
    <result column="construct_state" jdbcType="VARCHAR" property="constructState" />
    <result column="construct_area" jdbcType="DOUBLE" property="constructArea" />
    <result column="construct_months" jdbcType="VARCHAR" property="constructMonths" />
    <result column="control_measures" jdbcType="VARCHAR" property="controlMeasures" />
    <result column="finisharea" jdbcType="DOUBLE" property="finisharea" />
    <result column="nowkgarea" jdbcType="DOUBLE" property="nowkgarea" />
    <result column="startdate" jdbcType="DATE" property="startdate" />
    <result column="pm10_emission" jdbcType="DOUBLE" property="pm10Emission" />
    <result column="pm25_emission" jdbcType="DOUBLE" property="pm25Emission" />
    <result column="oc_emission" jdbcType="DOUBLE" property="ocEmission" />
    <result column="bc_emission" jdbcType="DOUBLE" property="bcEmission" />
    <result column="LONGITUDE1" jdbcType="DOUBLE" property="longitude1" />
    <result column="LATITUDE1" jdbcType="DOUBLE" property="latitude1" />
    <result column="LONGITUDE2" jdbcType="DOUBLE" property="longitude2" />
    <result column="LATITUDE2" jdbcType="DOUBLE" property="latitude2" />
    <result column="LONGITUDE3" jdbcType="DOUBLE" property="longitude3" />
    <result column="LATITUDE3" jdbcType="DOUBLE" property="latitude3" />
    <result column="LONGITUDE4" jdbcType="DOUBLE" property="longitude4" />
    <result column="LATITUDE4" jdbcType="DOUBLE" property="latitude4" />
    <result column="construction_type" jdbcType="VARCHAR" property="constructionType" />
    <result column="finishdate" jdbcType="DATE" property="finishdate" />
    <result column="note" jdbcType="VARCHAR" property="note" />
  </resultMap>
  <sql id="Base_Column_List">
    construct_dustid, scccode, factoryid, construct_state, construct_area, construct_months,
    control_measures, finisharea, nowkgarea, startdate, pm10_emission, pm25_emission,
    oc_emission, bc_emission, LONGITUDE1, LATITUDE1, LONGITUDE2, LATITUDE2, LONGITUDE3,
    LATITUDE3, LONGITUDE4, LATITUDE4, construction_type, finishdate, note
  </sql>
  <select id="selectById" resultType="nankai.xl.business.model.FConstructionDustSource" parameterType="java.lang.Integer" >
    select * from f_construction_dust_source
    where construct_dustid = #{constructDustid,jdbcType=INTEGER}
  </select>
  <select id="selectIdsByFactoryId" resultType="java.lang.Integer" parameterType="java.lang.Integer" >
    select construct_dustid from f_construction_dust_source
    where factoryid = #{factoryid,jdbcType=INTEGER}
  </select>
  <select id="selectByFactoryId" resultType="nankai.xl.business.model.FConstructionDustSource" parameterType="java.lang.Integer" >
    select * from f_construction_dust_source
    where factoryid = #{factoryid,jdbcType=INTEGER}
  </select>
  <select id="selectSum" resultType="nankai.xl.business.model.vo.FConstructionDustSourceSumVo" parameterType="nankai.xl.business.model.vo.FactorySumCommonQuery" >
    SELECT * FROM(
    SELECT  factory.`year`,factory.factory_name,factory.factory_no,factory.city_code,factory.county_id,factory.city_name,
    factory.COUNTY_NAME,factory.`status`,factory.statusdec,
    scc.sccDec,
    f_construction_dust_source.*
    FROM f_construction_dust_source
    LEFT JOIN (
    SELECT CONCAT(scc_4.scc_1,scc_4.scc_2,scc_4.scc_3,scc_4.scc_4) AS sccCode,
    CONCAT(scc_1.description,'/',scc_2.description,'/',scc_3.description,'/',scc_4.description) AS sccDec
    FROM scc_4
    LEFT JOIN scc_1
    ON scc_4.scc_1=scc_1.scc_1
    LEFT JOIN scc_2
    ON scc_4.scc_1=scc_2.scc_1 AND scc_4.scc_2=scc_2.scc_2
    LEFT JOIN scc_3
    ON scc_4.scc_1=scc_3.scc_1 AND scc_4.scc_2=scc_3.scc_2 AND scc_4.scc_3=scc_3.scc_3
    )scc
    ON scc.sccCode=f_construction_dust_source.scccode
    LEFT JOIN (
    SELECT factory.factory_id,factory.`year`,factory.factory_name,factory.factory_no,city.city_code,factory.county_id,city.city_name,
    county.COUNTY_NAME,factory.`status`,status.introduction AS statusdec
    FROM factory
    LEFT JOIN county
    ON factory.county_id=county.county_id
    LEFT JOIN city
    ON county.city_code=city.city_code
    LEFT JOIN `status`
    ON factory.`status`=`status`.id
    )factory
    ON factory.factory_id=f_construction_dust_source.factoryid
    )ss
    <where>
      <if test="year != null and year != ''">
        year = #{year}
      </if>
      <if test="countyId != null and countyId != ''">
        AND county_id = #{countyId}
      </if>
      <if test="cityCode != null and cityCode != ''">
        AND city_code = #{cityCode}
      </if>
      <if test="status != null and status != ''">
        AND status = #{status}
      </if>
    </where>
    ORDER BY factoryid,construct_dustid ASC
  </select>
  <update id="updateById" parameterType="nankai.xl.business.model.FConstructionDustSource" >
    update f_construction_dust_source
    <set>
      <if test="scccode != null">
        scccode = #{scccode,jdbcType=CHAR},
      </if>
      <if test="factoryid != null">
        factoryid = #{factoryid,jdbcType=INTEGER},
      </if>
      <if test="constructState != null">
        construct_state = #{constructState,jdbcType=VARCHAR},
      </if>
      <if test="constructArea != null">
        construct_area = #{constructArea,jdbcType=DOUBLE},
      </if>
      <if test="constructMonths != null">
        construct_months = #{constructMonths,jdbcType=VARCHAR},
      </if>
      <if test="controlMeasures != null">
        control_measures = #{controlMeasures,jdbcType=VARCHAR},
      </if>
      <if test="finisharea != null">
        finisharea = #{finisharea,jdbcType=DOUBLE},
      </if>
      <if test="nowkgarea != null">
        nowkgarea = #{nowkgarea,jdbcType=DOUBLE},
      </if>
      <if test="startdate != null">
        startdate = #{startdate,jdbcType=DATE},
      </if>
      <if test="pm10Emission != null">
        pm10_emission = #{pm10Emission,jdbcType=DOUBLE},
      </if>
      <if test="pm25Emission != null">
        pm25_emission = #{pm25Emission,jdbcType=DOUBLE},
      </if>
      <if test="ocEmission != null">
        oc_emission = #{ocEmission,jdbcType=DOUBLE},
      </if>
      <if test="bcEmission != null">
        bc_emission = #{bcEmission,jdbcType=DOUBLE},
      </if>
      <if test="longitude1 != null">
        LONGITUDE1 = #{longitude1,jdbcType=DOUBLE},
      </if>
      <if test="latitude1 != null">
        LATITUDE1 = #{latitude1,jdbcType=DOUBLE},
      </if>
      <if test="longitude2 != null">
        LONGITUDE2 = #{longitude2,jdbcType=DOUBLE},
      </if>
      <if test="latitude2 != null">
        LATITUDE2 = #{latitude2,jdbcType=DOUBLE},
      </if>
      <if test="longitude3 != null">
        LONGITUDE3 = #{longitude3,jdbcType=DOUBLE},
      </if>
      <if test="latitude3 != null">
        LATITUDE3 = #{latitude3,jdbcType=DOUBLE},
      </if>
      <if test="longitude4 != null">
        LONGITUDE4 = #{longitude4,jdbcType=DOUBLE},
      </if>
      <if test="latitude4 != null">
        LATITUDE4 = #{latitude4,jdbcType=DOUBLE},
      </if>
      <if test="constructionType != null">
        construction_type = #{constructionType,jdbcType=VARCHAR},
      </if>
      <if test="finishdate != null">
        finishdate = #{finishdate,jdbcType=DATE},
      </if>
      <if test="note != null">
        note = #{note,jdbcType=VARCHAR},
      </if>
    </set>
    where construct_dustid = #{constructDustid,jdbcType=INTEGER}
  </update>
</mapper>