<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="nankai.xl.business.mapper.RepastFamilyMapper" >
  <resultMap id="BaseResultMap" type="nankai.xl.business.model.RepastFamily">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="year" jdbcType="CHAR" property="year" />
    <result column="county_id" jdbcType="CHAR" property="countyId" />
    <result column="nonfarm_num" jdbcType="DOUBLE" property="nonfarmNum" />
    <result column="farm_num" jdbcType="DOUBLE" property="farmNum" />
    <result column="total_num" jdbcType="DOUBLE" property="totalNum" />
    <result column="scccode" jdbcType="CHAR" property="scccode" />
    <result column="smoke_rate" jdbcType="DOUBLE" property="smokeRate" />
    <result column="annual_runtime" jdbcType="INTEGER" property="annualRuntime" />
    <result column="gas_consumption" jdbcType="DOUBLE" property="gasConsumption" />
    <result column="removal_effi" jdbcType="DOUBLE" property="removalEffi" />
    <result column="pm_emission" jdbcType="DOUBLE" property="pmEmission" />
    <result column="pm10_emission" jdbcType="DOUBLE" property="pm10Emission" />
    <result column="pm25_emission" jdbcType="DOUBLE" property="pm25Emission" />
    <result column="so2_emission" jdbcType="DOUBLE" property="so2Emission" />
    <result column="nox_emission" jdbcType="DOUBLE" property="noxEmission" />
    <result column="co_emission" jdbcType="DOUBLE" property="coEmission" />
    <result column="nh3_emission" jdbcType="DOUBLE" property="nh3Emission" />
    <result column="voc_emission" jdbcType="DOUBLE" property="vocEmission" />
    <result column="oc_emission" jdbcType="DOUBLE" property="ocEmission" />
    <result column="bc_emission" jdbcType="DOUBLE" property="bcEmission" />
    <result column="flag" jdbcType="BIT" property="flag" />
    <result column="coal_consumption" jdbcType="DOUBLE" property="coalConsumption" />
    <result column="other_consumption" jdbcType="DOUBLE" property="otherConsumption" />
    <result column="other_conunit" jdbcType="CHAR" property="otherConunit" />
    <result column="oil_consumption" jdbcType="DOUBLE" property="oilConsumption" />
    <result column="source_discrip" jdbcType="VARCHAR" property="sourceDiscrip" />
  </resultMap>
  <select id="selectByExample" resultType="nankai.xl.business.model.vo.RepastFamilyVo" parameterType="nankai.xl.business.model.vo.RepastFamilyVo" >
    SELECT repast_family.*,co.COUNTY_NAME,co.city_code,co.city_name,SUBSTR(repast_family.scccode,1,2) AS scc1,SUBSTR(repast_family.scccode,3,2) AS scc2,
    SUBSTR(repast_family.scccode,5,3) AS scc3,SUBSTR(repast_family.scccode,8,3) AS scc4
    FROM repast_family
    LEFT JOIN (
      SELECT county.COUNTY_ID,county.COUNTY_NAME,city.city_name,city.city_code
      FROM county
      LEFT JOIN city
      ON county.city_code=city.city_code
    ) co
    ON co.COUNTY_ID=repast_family.county_id
    <where>
      <if test="year != null and year != ''">
        repast_family.year = #{year}
      </if>
      <if test="countyId != null and countyId != ''">
        AND repast_family.county_id = #{countyId}
      </if>
      <if test="cityCode != null and cityCode != ''">
        AND co.city_code = #{cityCode}
      </if>
    </where>
  </select>
  <select id="selectById" resultType="nankai.xl.business.model.vo.RepastFamilyVo" parameterType="java.lang.Integer" >
    SELECT repast_family.*,co.COUNTY_NAME,co.city_code,co.city_name,SUBSTR(repast_family.scccode,1,2) AS scc1,SUBSTR(repast_family.scccode,3,2) AS scc2,
    SUBSTR(repast_family.scccode,5,3) AS scc3,SUBSTR(repast_family.scccode,8,3) AS scc4
    FROM repast_family
    LEFT JOIN (
      SELECT county.COUNTY_ID,county.COUNTY_NAME,city.city_name,city.city_code
      FROM county
      LEFT JOIN city
      ON county.city_code=city.city_code
    ) co
    ON co.COUNTY_ID=repast_family.county_id
    where repast_family.id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteById" parameterType="java.lang.Integer" >
    delete from repast_family
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insertSelective" parameterType="nankai.xl.business.model.RepastFamily">
    insert into repast_family
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="year != null">
        year,
      </if>
      <if test="countyId != null">
        county_id,
      </if>
      <if test="nonfarmNum != null">
        nonfarm_num,
      </if>
      <if test="farmNum != null">
        farm_num,
      </if>
      <if test="totalNum != null">
        total_num,
      </if>
      <if test="scccode != null">
        scccode,
      </if>
      <if test="smokeRate != null">
        smoke_rate,
      </if>
      <if test="annualRuntime != null">
        annual_runtime,
      </if>
      <if test="gasConsumption != null">
        gas_consumption,
      </if>
      <if test="removalEffi != null">
        removal_effi,
      </if>
      <if test="pmEmission != null">
        pm_emission,
      </if>
      <if test="pm10Emission != null">
        pm10_emission,
      </if>
      <if test="pm25Emission != null">
        pm25_emission,
      </if>
      <if test="so2Emission != null">
        so2_emission,
      </if>
      <if test="noxEmission != null">
        nox_emission,
      </if>
      <if test="coEmission != null">
        co_emission,
      </if>
      <if test="nh3Emission != null">
        nh3_emission,
      </if>
      <if test="vocEmission != null">
        voc_emission,
      </if>
      <if test="ocEmission != null">
        oc_emission,
      </if>
      <if test="bcEmission != null">
        bc_emission,
      </if>
      <if test="flag != null">
        flag,
      </if>
      <if test="coalConsumption != null">
        coal_consumption,
      </if>
      <if test="otherConsumption != null">
        other_consumption,
      </if>
      <if test="otherConunit != null">
        other_conunit,
      </if>
      <if test="oilConsumption != null">
        oil_consumption,
      </if>
      <if test="sourceDiscrip != null">
        source_discrip,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="year != null">
        #{year,jdbcType=CHAR},
      </if>
      <if test="countyId != null">
        #{countyId,jdbcType=CHAR},
      </if>
      <if test="nonfarmNum != null">
        #{nonfarmNum,jdbcType=DOUBLE},
      </if>
      <if test="farmNum != null">
        #{farmNum,jdbcType=DOUBLE},
      </if>
      <if test="totalNum != null">
        #{totalNum,jdbcType=DOUBLE},
      </if>
      <if test="scccode != null">
        #{scccode,jdbcType=CHAR},
      </if>
      <if test="smokeRate != null">
        #{smokeRate,jdbcType=DOUBLE},
      </if>
      <if test="annualRuntime != null">
        #{annualRuntime,jdbcType=INTEGER},
      </if>
      <if test="gasConsumption != null">
        #{gasConsumption,jdbcType=DOUBLE},
      </if>
      <if test="removalEffi != null">
        #{removalEffi,jdbcType=DOUBLE},
      </if>
      <if test="pmEmission != null">
        #{pmEmission,jdbcType=DOUBLE},
      </if>
      <if test="pm10Emission != null">
        #{pm10Emission,jdbcType=DOUBLE},
      </if>
      <if test="pm25Emission != null">
        #{pm25Emission,jdbcType=DOUBLE},
      </if>
      <if test="so2Emission != null">
        #{so2Emission,jdbcType=DOUBLE},
      </if>
      <if test="noxEmission != null">
        #{noxEmission,jdbcType=DOUBLE},
      </if>
      <if test="coEmission != null">
        #{coEmission,jdbcType=DOUBLE},
      </if>
      <if test="nh3Emission != null">
        #{nh3Emission,jdbcType=DOUBLE},
      </if>
      <if test="vocEmission != null">
        #{vocEmission,jdbcType=DOUBLE},
      </if>
      <if test="ocEmission != null">
        #{ocEmission,jdbcType=DOUBLE},
      </if>
      <if test="bcEmission != null">
        #{bcEmission,jdbcType=DOUBLE},
      </if>
      <if test="flag != null">
        #{flag,jdbcType=BIT},
      </if>
      <if test="coalConsumption != null">
        #{coalConsumption,jdbcType=DOUBLE},
      </if>
      <if test="otherConsumption != null">
        #{otherConsumption,jdbcType=DOUBLE},
      </if>
      <if test="otherConunit != null">
        #{otherConunit,jdbcType=CHAR},
      </if>
      <if test="oilConsumption != null">
        #{oilConsumption,jdbcType=DOUBLE},
      </if>
      <if test="sourceDiscrip != null">
        #{sourceDiscrip,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <insert id="insertOrUpdate" parameterType="nankai.xl.business.model.RepastFamily" >
    insert into repast_family (id, year,
      county_id, nonfarm_num, farm_num, 
      total_num, scccode, smoke_rate, 
      annual_runtime, gas_consumption, removal_effi, 
      pm_emission, pm10_emission, pm25_emission,
      so2_emission, nox_emission, co_emission,
      nh3_emission, voc_emission, oc_emission,
      bc_emission, flag, coal_consumption,
      other_consumption, other_conunit, oil_consumption,
      source_discrip)
    values (#{id,jdbcType=INTEGER}, #{year,jdbcType=CHAR},
      #{countyId,jdbcType=CHAR}, #{nonfarmNum,jdbcType=DOUBLE}, #{farmNum,jdbcType=DOUBLE},
      #{totalNum,jdbcType=DOUBLE}, #{scccode,jdbcType=CHAR}, #{smokeRate,jdbcType=DOUBLE},
      #{annualRuntime,jdbcType=INTEGER}, #{gasConsumption,jdbcType=DOUBLE}, #{removalEffi,jdbcType=DOUBLE},
      #{pmEmission,jdbcType=DOUBLE}, #{pm10Emission,jdbcType=DOUBLE}, #{pm25Emission,jdbcType=DOUBLE},
      #{so2Emission,jdbcType=DOUBLE}, #{noxEmission,jdbcType=DOUBLE}, #{coEmission,jdbcType=DOUBLE},
      #{nh3Emission,jdbcType=DOUBLE}, #{vocEmission,jdbcType=DOUBLE}, #{ocEmission,jdbcType=DOUBLE},
      #{bcEmission,jdbcType=DOUBLE}, #{flag,jdbcType=BIT}, #{coalConsumption,jdbcType=DOUBLE},
      #{otherConsumption,jdbcType=DOUBLE}, #{otherConunit,jdbcType=CHAR}, #{oilConsumption,jdbcType=DOUBLE}, 
      #{sourceDiscrip,jdbcType=VARCHAR})
     ON DUPLICATE KEY UPDATE

  </insert>
  <insert id="insertList" parameterType="java.util.List">
    insert into repast_family (id, year,
    county_id, nonfarm_num, farm_num,
    total_num, scccode, smoke_rate,
    annual_runtime, gas_consumption, removal_effi,
    pm_emission, pm10_emission, pm25_emission,
    so2_emission, nox_emission, co_emission,
    nh3_emission, voc_emission, oc_emission,
    bc_emission, flag, coal_consumption,
    other_consumption, other_conunit, oil_consumption,
    source_discrip)
    VALUES
    <foreach collection="list"  index="index" item="item" separator=",">
      (
      #{item.id,jdbcType=INTEGER},#{item.year,jdbcType=CHAR},
      #{item.countyId,jdbcType=CHAR},#{item.nonfarmNum,jdbcType=DOUBLE},#{item.farmNum,jdbcType=DOUBLE},
      #{item.totalNum,jdbcType=DOUBLE},#{item.scccode,jdbcType=CHAR},#{item.smokeRate,jdbcType=DOUBLE},
      #{item.annualRuntime,jdbcType=INTEGER},#{item.gasConsumption,jdbcType=DOUBLE},#{item.removalEffi,jdbcType=DOUBLE},
      #{item.pmEmission,jdbcType=DOUBLE},#{item.pm10Emission,jdbcType=DOUBLE},#{item.pm25Emission,jdbcType=DOUBLE},
      #{item.so2Emission,jdbcType=DOUBLE},#{item.noxEmission,jdbcType=DOUBLE},#{item.coEmission,jdbcType=DOUBLE},
      #{item.nh3Emission,jdbcType=DOUBLE},#{item.vocEmission,jdbcType=DOUBLE},#{item.ocEmission,jdbcType=DOUBLE},
      #{item.bcEmission,jdbcType=DOUBLE},#{item.flag,jdbcType=BIT},#{item.coalConsumption,jdbcType=DOUBLE},
      #{item.otherConsumption,jdbcType=DOUBLE},#{item.otherConunit,jdbcType=CHAR},#{item.oilConsumption,jdbcType=DOUBLE},
      #{item.sourceDiscrip,jdbcType=VARCHAR}
      )
    </foreach>
  </insert>
  <update id="updateById" parameterType="nankai.xl.business.model.RepastFamily" >
    update repast_family
    <set >
      <if test="year != null" >
        year = #{year,jdbcType=CHAR},
      </if>
      <if test="countyId != null" >
        county_id = #{countyId,jdbcType=CHAR},
      </if>
      <if test="nonfarmNum != null" >
        nonfarm_num = #{nonfarmNum,jdbcType=DOUBLE},
      </if>
      <if test="farmNum != null" >
        farm_num = #{farmNum,jdbcType=DOUBLE},
      </if>
      <if test="totalNum != null" >
        total_num = #{totalNum,jdbcType=DOUBLE},
      </if>
      <if test="scccode != null" >
        scccode = #{scccode,jdbcType=CHAR},
      </if>
      <if test="smokeRate != null" >
        smoke_rate = #{smokeRate,jdbcType=DOUBLE},
      </if>
      <if test="annualRuntime != null" >
        annual_runtime = #{annualRuntime,jdbcType=INTEGER},
      </if>
      <if test="gasConsumption != null" >
        gas_consumption = #{gasConsumption,jdbcType=DOUBLE},
      </if>
      <if test="removalEffi != null" >
        removal_effi = #{removalEffi,jdbcType=DOUBLE},
      </if>
      <if test="pmEmission != null" >
        pm_emission = #{pmEmission,jdbcType=DOUBLE},
      </if>
      <if test="pm10Emission != null" >
        pm10_emission = #{pm10Emission,jdbcType=DOUBLE},
      </if>
      <if test="pm25Emission != null" >
        pm25_emission = #{pm25Emission,jdbcType=DOUBLE},
      </if>
      <if test="so2Emission != null" >
        so2_emission = #{so2Emission,jdbcType=DOUBLE},
      </if>
      <if test="noxEmission != null" >
        nox_emission = #{noxEmission,jdbcType=DOUBLE},
      </if>
      <if test="coEmission != null" >
        co_emission = #{coEmission,jdbcType=DOUBLE},
      </if>
      <if test="nh3Emission != null" >
        nh3_emission = #{nh3Emission,jdbcType=DOUBLE},
      </if>
      <if test="vocEmission != null" >
        voc_emission = #{vocEmission,jdbcType=DOUBLE},
      </if>
      <if test="ocEmission != null" >
        oc_emission = #{ocEmission,jdbcType=DOUBLE},
      </if>
      <if test="bcEmission != null" >
        bc_emission = #{bcEmission,jdbcType=DOUBLE},
      </if>
      <if test="flag != null" >
        flag = #{flag,jdbcType=BIT},
      </if>
      <if test="coalConsumption != null" >
        coal_consumption = #{coalConsumption,jdbcType=DOUBLE},
      </if>
      <if test="otherConsumption != null" >
        other_consumption = #{otherConsumption,jdbcType=DOUBLE},
      </if>
      <if test="otherConunit != null" >
        other_conunit = #{otherConunit,jdbcType=CHAR},
      </if>
      <if test="oilConsumption != null" >
        oil_consumption = #{oilConsumption,jdbcType=DOUBLE},
      </if>
      <if test="sourceDiscrip != null" >
        source_discrip = #{sourceDiscrip,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>