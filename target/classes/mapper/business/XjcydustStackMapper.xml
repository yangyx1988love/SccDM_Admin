<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="nankai.xl.business.mapper.XjcydustStackMapper" >
  <resultMap id="BaseResultMap" type="nankai.xl.business.model.vo.XjcydustStackVo" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="com_id" property="comId" jdbcType="INTEGER" />
    <result column="stack_id" property="stackId" jdbcType="INTEGER" />
    <result column="year" property="year" jdbcType="CHAR" />
    <result column="sarea" property="sarea" jdbcType="INTEGER" />
    <result column="material_type" property="materialType" jdbcType="VARCHAR" />
    <result column="windf_thresh" property="windfThresh" jdbcType="DOUBLE" />
    <result column="wind_friction" property="windFriction" jdbcType="DOUBLE" />
    <result column="ground_rough" property="groundRough" jdbcType="DOUBLE" />
    <result column="material_rough" property="materialRough" jdbcType="DOUBLE" />
    <result column="ground_windhigh" property="groundWindhigh" jdbcType="DOUBLE" />
    <result column="m_windnum" property="mWindnum" jdbcType="INTEGER" />
    <result column="ground_wind" property="groundWind" jdbcType="DOUBLE" />
    <result column="controlname" property="controlname" jdbcType="VARCHAR" />
    <result column="scccode" property="scccode" jdbcType="CHAR" />
    <result column="flag" property="flag" jdbcType="INTEGER" />
    <result column="pm25_emission" property="pm25Emission" jdbcType="DOUBLE" />
    <result column="pm10_emission" property="pm10Emission" jdbcType="DOUBLE" />
    <result column="voc_emission" property="vocEmission" jdbcType="DOUBLE" />
    <result column="nh3_emission" property="nh3Emission" jdbcType="DOUBLE" />
    <result column="so2_emission" property="so2Emission" jdbcType="DOUBLE" />
    <result column="co_emission" property="coEmission" jdbcType="DOUBLE" />
    <result column="oc_emission" property="ocEmission" jdbcType="DOUBLE" />
    <result column="bc_emission" property="bcEmission" jdbcType="DOUBLE" />
    <result column="nox_emission" property="noxEmission" jdbcType="DOUBLE" />
    <result column="pm25_max" property="pm25Max" jdbcType="DOUBLE" />
    <result column="pm10_max" property="pm10Max" jdbcType="DOUBLE" />
    <result column="voc_max" property="vocMax" jdbcType="DOUBLE" />
    <result column="nh3_max" property="nh3Max" jdbcType="DOUBLE" />
    <result column="so2_max" property="so2Max" jdbcType="DOUBLE" />
    <result column="co_max" property="coMax" jdbcType="DOUBLE" />
    <result column="oc_max" property="ocMax" jdbcType="DOUBLE" />
    <result column="bc_max" property="bcMax" jdbcType="DOUBLE" />
    <result column="nox_max" property="noxMax" jdbcType="DOUBLE" />
    <result column="pm25_unit" property="pm25Unit" jdbcType="CHAR" />
    <result column="pm10_unit" property="pm10Unit" jdbcType="CHAR" />
    <result column="voc_unit" property="vocUnit" jdbcType="CHAR" />
    <result column="nh3_unit" property="nh3Unit" jdbcType="CHAR" />
    <result column="so2_unit" property="so2Unit" jdbcType="CHAR" />
    <result column="co_unit" property="coUnit" jdbcType="CHAR" />
    <result column="oc_unit" property="ocUnit" jdbcType="CHAR" />
    <result column="bc_unit" property="bcUnit" jdbcType="CHAR" />
    <result column="nox_unit" property="noxUnit" jdbcType="CHAR" />
    <result column="scc_describe" property="sccDescribe" jdbcType="VARCHAR" />
    <result column="county_id" property="countyId" jdbcType="CHAR" />
    <result column="COUNTY_NAME" property="countyName" jdbcType="CHAR" />
    <result column="company_name" property="companyName" jdbcType="VARCHAR" />
  </resultMap>
  <select id="selectByExample" resultType="nankai.xl.business.model.vo.XjcydustStackVo" parameterType="nankai.xl.business.model.vo.XjcydustStackVo" >
    SELECT xjcydust_stack.*,company.*,co.COUNTY_NAME,co.city_code,co.city_name,SUBSTR(xjcydust_stack.scccode,1,2) AS scc1,
    SUBSTR(xjcydust_stack.scccode,3,2) AS scc2,SUBSTR(xjcydust_stack.scccode,5,3) AS scc3,SUBSTR(xjcydust_stack.scccode,8,3) AS scc4
    FROM xjcydust_stack
    LEFT JOIN company
    ON xjcydust_stack.com_id=company.com_id
    LEFT JOIN (
      SELECT county.COUNTY_ID,county.COUNTY_NAME,city.city_name,city.city_code
      FROM county
      LEFT JOIN city
      ON county.city_code=city.city_code
    ) co
    ON co.COUNTY_ID=company.county_id
    <where>
      <if test="year != null and year != ''">
        xjcydust_stack.year = #{year}
      </if>
      <if test="countyId != null and countyId != ''">
        AND company.county_id = #{countyId}
      </if>
      <if test="cityCode != null and cityCode != ''">
        AND co.city_code = #{cityCode}
      </if>
    </where>
  </select>
  <select id="selectById" resultType="nankai.xl.business.model.vo.XjcydustStackVo" parameterType="java.lang.Integer" >
    SELECT xjcydust_stack.*,company.*,co.COUNTY_NAME,co.city_code,co.city_name,SUBSTR(xjcydust_stack.scccode,1,2) AS scc1,
    SUBSTR(xjcydust_stack.scccode,3,2) AS scc2,SUBSTR(xjcydust_stack.scccode,5,3) AS scc3,SUBSTR(xjcydust_stack.scccode,8,3) AS scc4
    FROM xjcydust_stack
    LEFT JOIN company
    ON xjcydust_stack.com_id=company.com_id
    LEFT JOIN (
      SELECT county.COUNTY_ID,county.COUNTY_NAME,city.city_name,city.city_code
      FROM county
      LEFT JOIN city
      ON county.city_code=city.city_code
    ) co
    ON co.COUNTY_ID=company.county_id
    where xjcydust_stack.id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteById" parameterType="java.lang.Integer" >
    delete from xjcydust_stack
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insertSelective" parameterType="nankai.xl.business.model.XjcydustStack" >
    insert into xjcydust_stack
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="comId != null" >
        com_id,
      </if>
      <if test="stackId != null" >
        stack_id,
      </if>
      <if test="year != null" >
        year,
      </if>
      <if test="sarea != null" >
        sarea,
      </if>
      <if test="materialType != null" >
        material_type,
      </if>
      <if test="windfThresh != null" >
        windf_thresh,
      </if>
      <if test="windFriction != null" >
        wind_friction,
      </if>
      <if test="groundRough != null" >
        ground_rough,
      </if>
      <if test="materialRough != null" >
        material_rough,
      </if>
      <if test="groundWindhigh != null" >
        ground_windhigh,
      </if>
      <if test="mWindnum != null" >
        m_windnum,
      </if>
      <if test="groundWind != null" >
        ground_wind,
      </if>
      <if test="controlname != null" >
        controlname,
      </if>
      <if test="scccode != null" >
        scccode,
      </if>
      <if test="flag != null" >
        flag,
      </if>
      <if test="pm25Emission != null" >
        pm25_emission,
      </if>
      <if test="pm10Emission != null" >
        pm10_emission,
      </if>
      <if test="vocEmission != null" >
        voc_emission,
      </if>
      <if test="nh3Emission != null" >
        nh3_emission,
      </if>
      <if test="so2Emission != null" >
        so2_emission,
      </if>
      <if test="coEmission != null" >
        co_emission,
      </if>
      <if test="ocEmission != null" >
        oc_emission,
      </if>
      <if test="bcEmission != null" >
        bc_emission,
      </if>
      <if test="noxEmission != null" >
        nox_emission,
      </if>
      <if test="pm25Max != null" >
        pm25_max,
      </if>
      <if test="pm10Max != null" >
        pm10_max,
      </if>
      <if test="vocMax != null" >
        voc_max,
      </if>
      <if test="nh3Max != null" >
        nh3_max,
      </if>
      <if test="so2Max != null" >
        so2_max,
      </if>
      <if test="coMax != null" >
        co_max,
      </if>
      <if test="ocMax != null" >
        oc_max,
      </if>
      <if test="bcMax != null" >
        bc_max,
      </if>
      <if test="noxMax != null" >
        nox_max,
      </if>
      <if test="pm25Unit != null" >
        pm25_unit,
      </if>
      <if test="pm10Unit != null" >
        pm10_unit,
      </if>
      <if test="vocUnit != null" >
        voc_unit,
      </if>
      <if test="nh3Unit != null" >
        nh3_unit,
      </if>
      <if test="so2Unit != null" >
        so2_unit,
      </if>
      <if test="coUnit != null" >
        co_unit,
      </if>
      <if test="ocUnit != null" >
        oc_unit,
      </if>
      <if test="bcUnit != null" >
        bc_unit,
      </if>
      <if test="noxUnit != null" >
        nox_unit,
      </if>
      <if test="sccDescribe != null" >
        scc_describe,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="comId != null" >
        #{comId,jdbcType=INTEGER},
      </if>
      <if test="stackId != null" >
        #{stackId,jdbcType=INTEGER},
      </if>
      <if test="year != null" >
        #{year,jdbcType=CHAR},
      </if>
      <if test="sarea != null" >
        #{sarea,jdbcType=INTEGER},
      </if>
      <if test="materialType != null" >
        #{materialType,jdbcType=VARCHAR},
      </if>
      <if test="windfThresh != null" >
        #{windfThresh,jdbcType=DOUBLE},
      </if>
      <if test="windFriction != null" >
        #{windFriction,jdbcType=DOUBLE},
      </if>
      <if test="groundRough != null" >
        #{groundRough,jdbcType=DOUBLE},
      </if>
      <if test="materialRough != null" >
        #{materialRough,jdbcType=DOUBLE},
      </if>
      <if test="groundWindhigh != null" >
        #{groundWindhigh,jdbcType=DOUBLE},
      </if>
      <if test="mWindnum != null" >
        #{mWindnum,jdbcType=INTEGER},
      </if>
      <if test="groundWind != null" >
        #{groundWind,jdbcType=DOUBLE},
      </if>
      <if test="controlname != null" >
        #{controlname,jdbcType=VARCHAR},
      </if>
      <if test="scccode != null" >
        #{scccode,jdbcType=CHAR},
      </if>
      <if test="flag != null" >
        #{flag,jdbcType=INTEGER},
      </if>
      <if test="pm25Emission != null" >
        #{pm25Emission,jdbcType=DOUBLE},
      </if>
      <if test="pm10Emission != null" >
        #{pm10Emission,jdbcType=DOUBLE},
      </if>
      <if test="vocEmission != null" >
        #{vocEmission,jdbcType=DOUBLE},
      </if>
      <if test="nh3Emission != null" >
        #{nh3Emission,jdbcType=DOUBLE},
      </if>
      <if test="so2Emission != null" >
        #{so2Emission,jdbcType=DOUBLE},
      </if>
      <if test="coEmission != null" >
        #{coEmission,jdbcType=DOUBLE},
      </if>
      <if test="ocEmission != null" >
        #{ocEmission,jdbcType=DOUBLE},
      </if>
      <if test="bcEmission != null" >
        #{bcEmission,jdbcType=DOUBLE},
      </if>
      <if test="noxEmission != null" >
        #{noxEmission,jdbcType=DOUBLE},
      </if>
      <if test="pm25Max != null" >
        #{pm25Max,jdbcType=DOUBLE},
      </if>
      <if test="pm10Max != null" >
        #{pm10Max,jdbcType=DOUBLE},
      </if>
      <if test="vocMax != null" >
        #{vocMax,jdbcType=DOUBLE},
      </if>
      <if test="nh3Max != null" >
        #{nh3Max,jdbcType=DOUBLE},
      </if>
      <if test="so2Max != null" >
        #{so2Max,jdbcType=DOUBLE},
      </if>
      <if test="coMax != null" >
        #{coMax,jdbcType=DOUBLE},
      </if>
      <if test="ocMax != null" >
        #{ocMax,jdbcType=DOUBLE},
      </if>
      <if test="bcMax != null" >
        #{bcMax,jdbcType=DOUBLE},
      </if>
      <if test="noxMax != null" >
        #{noxMax,jdbcType=DOUBLE},
      </if>
      <if test="pm25Unit != null" >
        #{pm25Unit,jdbcType=CHAR},
      </if>
      <if test="pm10Unit != null" >
        #{pm10Unit,jdbcType=CHAR},
      </if>
      <if test="vocUnit != null" >
        #{vocUnit,jdbcType=CHAR},
      </if>
      <if test="nh3Unit != null" >
        #{nh3Unit,jdbcType=CHAR},
      </if>
      <if test="so2Unit != null" >
        #{so2Unit,jdbcType=CHAR},
      </if>
      <if test="coUnit != null" >
        #{coUnit,jdbcType=CHAR},
      </if>
      <if test="ocUnit != null" >
        #{ocUnit,jdbcType=CHAR},
      </if>
      <if test="bcUnit != null" >
        #{bcUnit,jdbcType=CHAR},
      </if>
      <if test="noxUnit != null" >
        #{noxUnit,jdbcType=CHAR},
      </if>
      <if test="sccDescribe != null" >
        #{sccDescribe,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <insert id="insertOrUpdate" parameterType="nankai.xl.business.model.XjcydustStack" >
    insert into xjcydust_stack (id, com_id, stack_id, 
      year, sarea, material_type, 
      windf_thresh, wind_friction, ground_rough, 
      material_rough, ground_windhigh, m_windnum, 
      ground_wind, controlname, scccode, 
      flag, pm25_emission, pm10_emission, 
      voc_emission, nh3_emission, so2_emission, 
      co_emission, oc_emission, bc_emission, 
      nox_emission, pm25_max, pm10_max, 
      voc_max, nh3_max, so2_max, 
      co_max, oc_max, bc_max, nox_max, 
      pm25_unit, pm10_unit, voc_unit, 
      nh3_unit, so2_unit, co_unit, oc_unit, 
      bc_unit, nox_unit, scc_describe
      )
    values (#{id,jdbcType=INTEGER}, #{comId,jdbcType=INTEGER}, #{stackId,jdbcType=INTEGER}, 
      #{year,jdbcType=CHAR}, #{sarea,jdbcType=INTEGER}, #{materialType,jdbcType=VARCHAR}, 
      #{windfThresh,jdbcType=DOUBLE}, #{windFriction,jdbcType=DOUBLE}, #{groundRough,jdbcType=DOUBLE}, 
      #{materialRough,jdbcType=DOUBLE}, #{groundWindhigh,jdbcType=DOUBLE}, #{mWindnum,jdbcType=INTEGER}, 
      #{groundWind,jdbcType=DOUBLE}, #{controlname,jdbcType=VARCHAR}, #{scccode,jdbcType=CHAR}, 
      #{flag,jdbcType=INTEGER}, #{pm25Emission,jdbcType=DOUBLE}, #{pm10Emission,jdbcType=DOUBLE}, 
      #{vocEmission,jdbcType=DOUBLE}, #{nh3Emission,jdbcType=DOUBLE}, #{so2Emission,jdbcType=DOUBLE}, 
      #{coEmission,jdbcType=DOUBLE}, #{ocEmission,jdbcType=DOUBLE}, #{bcEmission,jdbcType=DOUBLE}, 
      #{noxEmission,jdbcType=DOUBLE}, #{pm25Max,jdbcType=DOUBLE}, #{pm10Max,jdbcType=DOUBLE}, 
      #{vocMax,jdbcType=DOUBLE}, #{nh3Max,jdbcType=DOUBLE}, #{so2Max,jdbcType=DOUBLE}, 
      #{coMax,jdbcType=DOUBLE}, #{ocMax,jdbcType=DOUBLE}, #{bcMax,jdbcType=DOUBLE}, #{noxMax,jdbcType=DOUBLE}, 
      #{pm25Unit,jdbcType=CHAR}, #{pm10Unit,jdbcType=CHAR}, #{vocUnit,jdbcType=CHAR}, 
      #{nh3Unit,jdbcType=CHAR}, #{so2Unit,jdbcType=CHAR}, #{coUnit,jdbcType=CHAR}, #{ocUnit,jdbcType=CHAR}, 
      #{bcUnit,jdbcType=CHAR}, #{noxUnit,jdbcType=CHAR}, #{sccDescribe,jdbcType=VARCHAR}
      )
     ON DUPLICATE KEY UPDATE        
      id = #{id,jdbcType=INTEGER},
      com_id = #{comId,jdbcType=INTEGER},
      stack_id = #{stackId,jdbcType=INTEGER},
      year = #{year,jdbcType=CHAR},
      sarea = #{sarea,jdbcType=INTEGER},
      material_type = #{materialType,jdbcType=VARCHAR},
      windf_thresh = #{windfThresh,jdbcType=DOUBLE},
      wind_friction = #{windFriction,jdbcType=DOUBLE},
      ground_rough = #{groundRough,jdbcType=DOUBLE},
      material_rough = #{materialRough,jdbcType=DOUBLE},
      ground_windhigh = #{groundWindhigh,jdbcType=DOUBLE},
      m_windnum = #{mWindnum,jdbcType=INTEGER},
      ground_wind = #{groundWind,jdbcType=DOUBLE},
      controlname = #{controlname,jdbcType=VARCHAR},
      scccode = #{scccode,jdbcType=CHAR},
      flag = #{flag,jdbcType=INTEGER},
      pm25_emission = #{pm25Emission,jdbcType=DOUBLE},
      pm10_emission = #{pm10Emission,jdbcType=DOUBLE},
      voc_emission = #{vocEmission,jdbcType=DOUBLE},
      nh3_emission = #{nh3Emission,jdbcType=DOUBLE},
      so2_emission = #{so2Emission,jdbcType=DOUBLE},
      co_emission = #{coEmission,jdbcType=DOUBLE},
      oc_emission = #{ocEmission,jdbcType=DOUBLE},
      bc_emission = #{bcEmission,jdbcType=DOUBLE},
      nox_emission = #{noxEmission,jdbcType=DOUBLE},
      pm25_max = #{pm25Max,jdbcType=DOUBLE},
      pm10_max = #{pm10Max,jdbcType=DOUBLE},
      voc_max = #{vocMax,jdbcType=DOUBLE},
      nh3_max = #{nh3Max,jdbcType=DOUBLE},
      so2_max = #{so2Max,jdbcType=DOUBLE},
      co_max = #{coMax,jdbcType=DOUBLE},
      oc_max = #{ocMax,jdbcType=DOUBLE},
      bc_max = #{bcMax,jdbcType=DOUBLE},
      nox_max = #{noxMax,jdbcType=DOUBLE},
      pm25_unit = #{pm25Unit,jdbcType=CHAR},
      pm10_unit = #{pm10Unit,jdbcType=CHAR},
      voc_unit = #{vocUnit,jdbcType=CHAR},
      nh3_unit = #{nh3Unit,jdbcType=CHAR},
      so2_unit = #{so2Unit,jdbcType=CHAR},
      co_unit = #{coUnit,jdbcType=CHAR},
      oc_unit = #{ocUnit,jdbcType=CHAR},
      bc_unit = #{bcUnit,jdbcType=CHAR},
      nox_unit = #{noxUnit,jdbcType=CHAR},
      scc_describe = #{sccDescribe,jdbcType=VARCHAR}
  </insert>
  <insert id="insertList" parameterType="java.util.List">
    INSERT INTO xjcydust_stack (id, com_id, stack_id,
    year, sarea, material_type,
    windf_thresh, wind_friction, ground_rough,
    material_rough, ground_windhigh, m_windnum,
    ground_wind, controlname, scccode,
    flag, pm25_emission, pm10_emission,
    voc_emission, nh3_emission, so2_emission,
    co_emission, oc_emission, bc_emission,
    nox_emission, pm25_max, pm10_max,
    voc_max, nh3_max, so2_max,
    co_max, oc_max, bc_max, nox_max,
    pm25_unit, pm10_unit, voc_unit,
    nh3_unit, so2_unit, co_unit, oc_unit,
    bc_unit, nox_unit, scc_describe
    )
    VALUES
    <foreach collection="list"  index="index" item="item" separator=",">
      (
      id = #{item.id,jdbcType=INTEGER},
      com_id = #{item.comId,jdbcType=INTEGER},
      stack_id = #{item.stackId,jdbcType=INTEGER},
      year = #{item.year,jdbcType=CHAR},
      sarea = #{item.sarea,jdbcType=INTEGER},
      material_type = #{item.materialType,jdbcType=VARCHAR},
      windf_thresh = #{item.windfThresh,jdbcType=DOUBLE},
      wind_friction = #{item.windFriction,jdbcType=DOUBLE},
      ground_rough = #{item.groundRough,jdbcType=DOUBLE},
      material_rough = #{item.materialRough,jdbcType=DOUBLE},
      ground_windhigh = #{item.groundWindhigh,jdbcType=DOUBLE},
      m_windnum = #{item.mWindnum,jdbcType=INTEGER},
      ground_wind = #{item.groundWind,jdbcType=DOUBLE},
      controlname = #{item.controlname,jdbcType=VARCHAR},
      scccode = #{item.scccode,jdbcType=CHAR},
      flag = #{item.flag,jdbcType=INTEGER},
      pm25_emission = #{item.pm25Emission,jdbcType=DOUBLE},
      pm10_emission = #{item.pm10Emission,jdbcType=DOUBLE},
      voc_emission = #{item.vocEmission,jdbcType=DOUBLE},
      nh3_emission = #{item.nh3Emission,jdbcType=DOUBLE},
      so2_emission = #{item.so2Emission,jdbcType=DOUBLE},
      co_emission = #{item.coEmission,jdbcType=DOUBLE},
      oc_emission = #{item.ocEmission,jdbcType=DOUBLE},
      bc_emission = #{item.bcEmission,jdbcType=DOUBLE},
      nox_emission = #{item.noxEmission,jdbcType=DOUBLE},
      pm25_max = #{item.pm25Max,jdbcType=DOUBLE},
      pm10_max = #{item.pm10Max,jdbcType=DOUBLE},
      voc_max = #{item.vocMax,jdbcType=DOUBLE},
      nh3_max = #{item.nh3Max,jdbcType=DOUBLE},
      so2_max = #{item.so2Max,jdbcType=DOUBLE},
      co_max = #{item.coMax,jdbcType=DOUBLE},
      oc_max = #{item.ocMax,jdbcType=DOUBLE},
      bc_max = #{item.bcMax,jdbcType=DOUBLE},
      nox_max = #{item.noxMax,jdbcType=DOUBLE},
      pm25_unit = #{item.pm25Unit,jdbcType=CHAR},
      pm10_unit = #{item.pm10Unit,jdbcType=CHAR},
      voc_unit = #{item.vocUnit,jdbcType=CHAR},
      nh3_unit = #{item.nh3Unit,jdbcType=CHAR},
      so2_unit = #{item.so2Unit,jdbcType=CHAR},
      co_unit = #{item.coUnit,jdbcType=CHAR},
      oc_unit = #{item.ocUnit,jdbcType=CHAR},
      bc_unit = #{item.bcUnit,jdbcType=CHAR},
      nox_unit = #{item.noxUnit,jdbcType=CHAR},
      scc_describe = #{item.sccDescribe,jdbcType=VARCHAR}
      )
    </foreach>
  </insert>
  <update id="updateById" parameterType="nankai.xl.business.model.XjcydustStack" >
    update xjcydust_stack
    <set >
      <if test="comId != null" >
        com_id = #{comId,jdbcType=INTEGER},
      </if>
      <if test="stackId != null" >
        stack_id = #{stackId,jdbcType=INTEGER},
      </if>
      <if test="year != null" >
        year = #{year,jdbcType=CHAR},
      </if>
      <if test="sarea != null" >
        sarea = #{sarea,jdbcType=INTEGER},
      </if>
      <if test="materialType != null" >
        material_type = #{materialType,jdbcType=VARCHAR},
      </if>
      <if test="windfThresh != null" >
        windf_thresh = #{windfThresh,jdbcType=DOUBLE},
      </if>
      <if test="windFriction != null" >
        wind_friction = #{windFriction,jdbcType=DOUBLE},
      </if>
      <if test="groundRough != null" >
        ground_rough = #{groundRough,jdbcType=DOUBLE},
      </if>
      <if test="materialRough != null" >
        material_rough = #{materialRough,jdbcType=DOUBLE},
      </if>
      <if test="groundWindhigh != null" >
        ground_windhigh = #{groundWindhigh,jdbcType=DOUBLE},
      </if>
      <if test="mWindnum != null" >
        m_windnum = #{mWindnum,jdbcType=INTEGER},
      </if>
      <if test="groundWind != null" >
        ground_wind = #{groundWind,jdbcType=DOUBLE},
      </if>
      <if test="controlname != null" >
        controlname = #{controlname,jdbcType=VARCHAR},
      </if>
      <if test="scccode != null" >
        scccode = #{scccode,jdbcType=CHAR},
      </if>
      <if test="flag != null" >
        flag = #{flag,jdbcType=INTEGER},
      </if>
      <if test="pm25Emission != null" >
        pm25_emission = #{pm25Emission,jdbcType=DOUBLE},
      </if>
      <if test="pm10Emission != null" >
        pm10_emission = #{pm10Emission,jdbcType=DOUBLE},
      </if>
      <if test="vocEmission != null" >
        voc_emission = #{vocEmission,jdbcType=DOUBLE},
      </if>
      <if test="nh3Emission != null" >
        nh3_emission = #{nh3Emission,jdbcType=DOUBLE},
      </if>
      <if test="so2Emission != null" >
        so2_emission = #{so2Emission,jdbcType=DOUBLE},
      </if>
      <if test="coEmission != null" >
        co_emission = #{coEmission,jdbcType=DOUBLE},
      </if>
      <if test="ocEmission != null" >
        oc_emission = #{ocEmission,jdbcType=DOUBLE},
      </if>
      <if test="bcEmission != null" >
        bc_emission = #{bcEmission,jdbcType=DOUBLE},
      </if>
      <if test="noxEmission != null" >
        nox_emission = #{noxEmission,jdbcType=DOUBLE},
      </if>
      <if test="pm25Max != null" >
        pm25_max = #{pm25Max,jdbcType=DOUBLE},
      </if>
      <if test="pm10Max != null" >
        pm10_max = #{pm10Max,jdbcType=DOUBLE},
      </if>
      <if test="vocMax != null" >
        voc_max = #{vocMax,jdbcType=DOUBLE},
      </if>
      <if test="nh3Max != null" >
        nh3_max = #{nh3Max,jdbcType=DOUBLE},
      </if>
      <if test="so2Max != null" >
        so2_max = #{so2Max,jdbcType=DOUBLE},
      </if>
      <if test="coMax != null" >
        co_max = #{coMax,jdbcType=DOUBLE},
      </if>
      <if test="ocMax != null" >
        oc_max = #{ocMax,jdbcType=DOUBLE},
      </if>
      <if test="bcMax != null" >
        bc_max = #{bcMax,jdbcType=DOUBLE},
      </if>
      <if test="noxMax != null" >
        nox_max = #{noxMax,jdbcType=DOUBLE},
      </if>
      <if test="pm25Unit != null" >
        pm25_unit = #{pm25Unit,jdbcType=CHAR},
      </if>
      <if test="pm10Unit != null" >
        pm10_unit = #{pm10Unit,jdbcType=CHAR},
      </if>
      <if test="vocUnit != null" >
        voc_unit = #{vocUnit,jdbcType=CHAR},
      </if>
      <if test="nh3Unit != null" >
        nh3_unit = #{nh3Unit,jdbcType=CHAR},
      </if>
      <if test="so2Unit != null" >
        so2_unit = #{so2Unit,jdbcType=CHAR},
      </if>
      <if test="coUnit != null" >
        co_unit = #{coUnit,jdbcType=CHAR},
      </if>
      <if test="ocUnit != null" >
        oc_unit = #{ocUnit,jdbcType=CHAR},
      </if>
      <if test="bcUnit != null" >
        bc_unit = #{bcUnit,jdbcType=CHAR},
      </if>
      <if test="noxUnit != null" >
        nox_unit = #{noxUnit,jdbcType=CHAR},
      </if>
      <if test="sccDescribe != null" >
        scc_describe = #{sccDescribe,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>