<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="nankai.xl.business.mapper.CollectbreedingMapper" >
  <resultMap id="BaseResultMap" type="nankai.xl.business.model.vo.CollectbreedingVo" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="year" property="year" jdbcType="CHAR" />
    <result column="company_id" property="companyId" jdbcType="INTEGER" />
    <result column="source_discrip" property="sourceDiscrip" jdbcType="CHAR" />
    <result column="scccode" property="scccode" jdbcType="CHAR" />
    <result column="activity_level" property="activityLevel" jdbcType="DOUBLE" />
    <result column="compute_cycle" property="computeCycle" jdbcType="INTEGER" />
    <result column="pm10_emission" property="pm10Emission" jdbcType="DOUBLE" />
    <result column="pm25_emission" property="pm25Emission" jdbcType="DOUBLE" />
    <result column="voc_emission" property="vocEmission" jdbcType="DOUBLE" />
    <result column="nh3_emission" property="nh3Emission" jdbcType="DOUBLE" />
    <result column="so2_emission" property="so2Emission" jdbcType="DOUBLE" />
    <result column="co_emission" property="coEmission" jdbcType="DOUBLE" />
    <result column="oc_emission" property="ocEmission" jdbcType="DOUBLE" />
    <result column="bc_emission" property="bcEmission" jdbcType="DOUBLE" />
    <result column="nox_emission" property="noxEmission" jdbcType="DOUBLE" />
    <result column="flag" property="flag" jdbcType="TINYINT" />
    <result column="county_id" property="countyId" jdbcType="CHAR" />
    <result column="COUNTY_NAME" property="countyName" jdbcType="CHAR" />
    <result column="company_name" property="companyName" jdbcType="VARCHAR" />
    <result column="address" property="address" jdbcType="VARCHAR" />
  </resultMap>
  <select id="selectByExample" resultType="nankai.xl.business.model.vo.CollectbreedingVo" parameterType="nankai.xl.business.model.vo.CollectbreedingVo" >
    SELECT collectbreeding.*,company.*,co.COUNTY_NAME,co.city_code,co.city_name,SUBSTR(collectbreeding.scccode,1,2) AS scc1,
    SUBSTR(collectbreeding.scccode,3,2) AS scc2,SUBSTR(collectbreeding.scccode,5,3) AS scc3,SUBSTR(collectbreeding.scccode,8,3) AS scc4
    FROM collectbreeding
    LEFT JOIN company
    ON collectbreeding.company_id=company.com_id
    LEFT JOIN (
      SELECT county.COUNTY_ID,county.COUNTY_NAME,city.city_name,city.city_code
      FROM county
      LEFT JOIN city
      ON county.city_code=city.city_code
    ) co
    ON co.COUNTY_ID=company.county_id
    <where>
      <if test="year != null and year != ''">
        collectbreeding.year = #{year}
      </if>
      <if test="countyId != null and countyId != ''">
        AND company.county_id = #{countyId}
      </if>
      <if test="cityCode != null and cityCode != ''">
        AND co.city_code = #{cityCode}
      </if>
    </where>
  </select>
  <select id="selectById" resultType="nankai.xl.business.model.vo.CollectbreedingVo" parameterType="java.lang.Integer" >
    SELECT collectbreeding.*,company.*,co.COUNTY_NAME,co.city_code,co.city_name,SUBSTR(collectbreeding.scccode,1,2) AS scc1,
    SUBSTR(collectbreeding.scccode,3,2) AS scc2,SUBSTR(collectbreeding.scccode,5,3) AS scc3,SUBSTR(collectbreeding.scccode,8,3) AS scc4
    FROM collectbreeding
    LEFT JOIN company
    ON collectbreeding.company_id=company.com_id
    LEFT JOIN (
      SELECT county.COUNTY_ID,county.COUNTY_NAME,city.city_name,city.city_code
      FROM county
      LEFT JOIN city
      ON county.city_code=city.city_code
    ) co
    ON co.COUNTY_ID=company.county_id
    where collectbreeding.id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteById" parameterType="java.lang.Integer" >
    delete from collectbreeding
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insertSelective" parameterType="nankai.xl.business.model.Collectbreeding" >
    insert into collectbreeding
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="year != null" >
        year,
      </if>
      <if test="companyId != null" >
        company_id,
      </if>
      <if test="sourceDiscrip != null" >
        source_discrip,
      </if>
      <if test="scccode != null" >
        scccode,
      </if>
      <if test="activityLevel != null" >
        activity_level,
      </if>
      <if test="computeCycle != null" >
        compute_cycle,
      </if>
      <if test="pm10Emission != null" >
        pm10_emission,
      </if>
      <if test="pm25Emission != null" >
        pm25_emission,
      </if>
      <if test="vocEmission != null" >
        voc_emission,
      </if>
      <if test="nh3Emission != null" >
        nh3_emission,
      </if>
      <if test="so2Emission != null" >
        so2_emission,
      </if>
      <if test="coEmission != null" >
        co_emission,
      </if>
      <if test="ocEmission != null" >
        oc_emission,
      </if>
      <if test="bcEmission != null" >
        bc_emission,
      </if>
      <if test="noxEmission != null" >
        nox_emission,
      </if>
      <if test="flag != null" >
        flag,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="year != null" >
        #{year,jdbcType=CHAR},
      </if>
      <if test="companyId != null" >
        #{companyId,jdbcType=INTEGER},
      </if>
      <if test="sourceDiscrip != null" >
        #{sourceDiscrip,jdbcType=CHAR},
      </if>
      <if test="scccode != null" >
        #{scccode,jdbcType=CHAR},
      </if>
      <if test="activityLevel != null" >
        #{activityLevel,jdbcType=DOUBLE},
      </if>
      <if test="computeCycle != null" >
        #{computeCycle,jdbcType=INTEGER},
      </if>
      <if test="pm10Emission != null" >
        #{pm10Emission,jdbcType=DOUBLE},
      </if>
      <if test="pm25Emission != null" >
        #{pm25Emission,jdbcType=DOUBLE},
      </if>
      <if test="vocEmission != null" >
        #{vocEmission,jdbcType=DOUBLE},
      </if>
      <if test="nh3Emission != null" >
        #{nh3Emission,jdbcType=DOUBLE},
      </if>
      <if test="so2Emission != null" >
        #{so2Emission,jdbcType=DOUBLE},
      </if>
      <if test="coEmission != null" >
        #{coEmission,jdbcType=DOUBLE},
      </if>
      <if test="ocEmission != null" >
        #{ocEmission,jdbcType=DOUBLE},
      </if>
      <if test="bcEmission != null" >
        #{bcEmission,jdbcType=DOUBLE},
      </if>
      <if test="noxEmission != null" >
        #{noxEmission,jdbcType=DOUBLE},
      </if>
      <if test="flag != null" >
        #{flag,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <insert id="insertOrUpdate" parameterType="nankai.xl.business.model.Collectbreeding" >
    insert into collectbreeding (id, year, company_id, 
      source_discrip, scccode, activity_level, 
      compute_cycle, pm10_emission, pm25_emission, 
      voc_emission, nh3_emission, so2_emission, 
      co_emission, oc_emission, bc_emission, 
      nox_emission, flag)
    values (#{id,jdbcType=INTEGER}, #{year,jdbcType=CHAR}, #{companyId,jdbcType=INTEGER}, 
      #{sourceDiscrip,jdbcType=CHAR}, #{scccode,jdbcType=CHAR}, #{activityLevel,jdbcType=DOUBLE}, 
      #{computeCycle,jdbcType=INTEGER}, #{pm10Emission,jdbcType=DOUBLE}, #{pm25Emission,jdbcType=DOUBLE}, 
      #{vocEmission,jdbcType=DOUBLE}, #{nh3Emission,jdbcType=DOUBLE}, #{so2Emission,jdbcType=DOUBLE}, 
      #{coEmission,jdbcType=DOUBLE}, #{ocEmission,jdbcType=DOUBLE}, #{bcEmission,jdbcType=DOUBLE}, 
      #{noxEmission,jdbcType=DOUBLE}, #{flag,jdbcType=TINYINT})
    ON DUPLICATE KEY UPDATE        
      id = #{id,jdbcType=INTEGER},
      year = #{year,jdbcType=CHAR},
      company_id = #{companyId,jdbcType=INTEGER},
      source_discrip = #{sourceDiscrip,jdbcType=CHAR},
      scccode = #{scccode,jdbcType=CHAR},
      activity_level = #{activityLevel,jdbcType=DOUBLE},
      compute_cycle = #{computeCycle,jdbcType=INTEGER},
      pm10_emission = #{pm10Emission,jdbcType=DOUBLE},
      pm25_emission = #{pm25Emission,jdbcType=DOUBLE},
      voc_emission = #{vocEmission,jdbcType=DOUBLE},
      nh3_emission = #{nh3Emission,jdbcType=DOUBLE},
      so2_emission = #{so2Emission,jdbcType=DOUBLE},
      co_emission = #{coEmission,jdbcType=DOUBLE},
      oc_emission = #{ocEmission,jdbcType=DOUBLE},
      bc_emission = #{bcEmission,jdbcType=DOUBLE},
      nox_emission = #{noxEmission,jdbcType=DOUBLE},
      flag = #{flag,jdbcType=TINYINT}
  </insert>
  <insert id="insertList" parameterType="java.util.List">
    INSERT INTO collectbreeding (id, year, company_id,
    source_discrip, scccode, activity_level,
    compute_cycle, pm10_emission, pm25_emission,
    voc_emission, nh3_emission, so2_emission,
    co_emission, oc_emission, bc_emission,
    nox_emission, flag)
    VALUES
    <foreach collection="list"  index="index" item="item" separator=",">
      (
      id = #{item.id,jdbcType=INTEGER},
      year = #{item.year,jdbcType=CHAR},
      company_id = #{item.companyId,jdbcType=INTEGER},
      source_discrip = #{item.sourceDiscrip,jdbcType=CHAR},
      scccode = #{item.scccode,jdbcType=CHAR},
      activity_level = #{item.activityLevel,jdbcType=DOUBLE},
      compute_cycle = #{item.computeCycle,jdbcType=INTEGER},
      pm10_emission = #{item.pm10Emission,jdbcType=DOUBLE},
      pm25_emission = #{item.pm25Emission,jdbcType=DOUBLE},
      voc_emission = #{item.vocEmission,jdbcType=DOUBLE},
      nh3_emission = #{item.nh3Emission,jdbcType=DOUBLE},
      so2_emission = #{item.so2Emission,jdbcType=DOUBLE},
      co_emission = #{item.coEmission,jdbcType=DOUBLE},
      oc_emission = #{item.ocEmission,jdbcType=DOUBLE},
      bc_emission = #{item.bcEmission,jdbcType=DOUBLE},
      nox_emission = #{item.noxEmission,jdbcType=DOUBLE},
      flag = #{item.flag,jdbcType=TINYINT}
      )
    </foreach>
  </insert>
  <update id="updateById" parameterType="nankai.xl.business.model.Collectbreeding" >
    update collectbreeding
    <set >
      <if test="year != null" >
        year = #{year,jdbcType=CHAR},
      </if>
      <if test="companyId != null" >
        company_id = #{companyId,jdbcType=INTEGER},
      </if>
      <if test="sourceDiscrip != null" >
        source_discrip = #{sourceDiscrip,jdbcType=CHAR},
      </if>
      <if test="scccode != null" >
        scccode = #{scccode,jdbcType=CHAR},
      </if>
      <if test="activityLevel != null" >
        activity_level = #{activityLevel,jdbcType=DOUBLE},
      </if>
      <if test="computeCycle != null" >
        compute_cycle = #{computeCycle,jdbcType=INTEGER},
      </if>
      <if test="pm10Emission != null" >
        pm10_emission = #{pm10Emission,jdbcType=DOUBLE},
      </if>
      <if test="pm25Emission != null" >
        pm25_emission = #{pm25Emission,jdbcType=DOUBLE},
      </if>
      <if test="vocEmission != null" >
        voc_emission = #{vocEmission,jdbcType=DOUBLE},
      </if>
      <if test="nh3Emission != null" >
        nh3_emission = #{nh3Emission,jdbcType=DOUBLE},
      </if>
      <if test="so2Emission != null" >
        so2_emission = #{so2Emission,jdbcType=DOUBLE},
      </if>
      <if test="coEmission != null" >
        co_emission = #{coEmission,jdbcType=DOUBLE},
      </if>
      <if test="ocEmission != null" >
        oc_emission = #{ocEmission,jdbcType=DOUBLE},
      </if>
      <if test="bcEmission != null" >
        bc_emission = #{bcEmission,jdbcType=DOUBLE},
      </if>
      <if test="noxEmission != null" >
        nox_emission = #{noxEmission,jdbcType=DOUBLE},
      </if>
      <if test="flag != null" >
        flag = #{flag,jdbcType=TINYINT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>