<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="nankai.xl.business.mapper.RepastMapper" >
  <resultMap id="BaseResultMap" type="nankai.xl.business.model.Repast" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="factoryid" property="factoryid" jdbcType="INTEGER" />
    <result column="year" property="year" jdbcType="CHAR" />
    <result column="cooking_num" property="cookingNum" jdbcType="INTEGER" />
    <result column="cleaner_num" property="cleanerNum" jdbcType="INTEGER" />
    <result column="scccode" property="scccode" jdbcType="CHAR" />
    <result column="smoke_rate" property="smokeRate" jdbcType="DOUBLE" />
    <result column="annual_runtime" property="annualRuntime" jdbcType="INTEGER" />
    <result column="removal_effi" property="removalEffi" jdbcType="DOUBLE" />
    <result column="household_num" property="householdNum" jdbcType="INTEGER" />
    <result column="pm_emission" property="pmEmission" jdbcType="DOUBLE" />
    <result column="pm10_emission" property="pm10Emission" jdbcType="DOUBLE" />
    <result column="pm25_emission" property="pm25Emission" jdbcType="DOUBLE" />
    <result column="so2_emission" property="so2Emission" jdbcType="DOUBLE" />
    <result column="nox_emission" property="noxEmission" jdbcType="DOUBLE" />
    <result column="co_emission" property="coEmission" jdbcType="DOUBLE" />
    <result column="nh3_emission" property="nh3Emission" jdbcType="DOUBLE" />
    <result column="voc_emission" property="vocEmission" jdbcType="DOUBLE" />
    <result column="oc_emission" property="ocEmission" jdbcType="DOUBLE" />
    <result column="bc_emission" property="bcEmission" jdbcType="DOUBLE" />
    <result column="flag" property="flag" jdbcType="BIT" />
    <result column="gas_consumption" property="gasConsumption" jdbcType="DOUBLE" />
    <result column="coal_consumption" property="coalConsumption" jdbcType="DOUBLE" />
    <result column="coalgas_consumption" property="coalgasConsumption" jdbcType="DOUBLE" />
    <result column="power_consumption" property="powerConsumption" jdbcType="DOUBLE" />
    <result column="methanol_consumption" property="methanolConsumption" jdbcType="DOUBLE" />
    <result column="other_consumption" property="otherConsumption" jdbcType="DOUBLE" />
    <result column="other_conunit" property="otherConunit" jdbcType="CHAR" />
    <result column="oil_consumption" property="oilConsumption" jdbcType="DOUBLE" />
    <result column="source_discrip" property="sourceDiscrip" jdbcType="VARCHAR" />
  </resultMap>
  <select id="selectByExample" resultType="nankai.xl.business.model.vo.RepastVo" parameterType="nankai.xl.business.model.vo.RepastVo" >
    SELECT repast.*,company.*,co.COUNTY_NAME,co.city_code,co.city_name,SUBSTR(repast.scccode,1,2) AS scc1,SUBSTR(repast.scccode,3,2) AS scc2,
    SUBSTR(repast.scccode,5,3) AS scc3,SUBSTR(repast.scccode,8,3) AS scc4
    FROM repast
    LEFT JOIN company
    ON repast.factoryid=company.com_id
    LEFT JOIN (
      SELECT county.COUNTY_ID,county.COUNTY_NAME,city.city_name,city.city_code
      FROM county
      LEFT JOIN city
      ON county.city_code=city.city_code
    ) co
    ON co.COUNTY_ID=company.county_id
    <where>
      <if test="year != null and year != ''">
        repast.year = #{year}
      </if>
      <if test="countyId != null and countyId != ''">
        AND company.county_id = #{countyId}
      </if>
      <if test="cityCode != null and cityCode != ''">
        AND co.city_code = #{cityCode}
      </if>
    </where>
  </select>
  <select id="selectById" resultType="nankai.xl.business.model.vo.RepastVo" parameterType="java.lang.Integer" >
    SELECT repast.*,company.*,co.COUNTY_NAME,co.city_code,co.city_name,SUBSTR(repast.scccode,1,2) AS scc1,SUBSTR(repast.scccode,3,2) AS scc2,
    SUBSTR(repast.scccode,5,3) AS scc3,SUBSTR(repast.scccode,8,3) AS scc4
    FROM repast
    LEFT JOIN company
    ON repast.factoryid=company.com_id
    LEFT JOIN (
      SELECT county.COUNTY_ID,county.COUNTY_NAME,city.city_name,city.city_code
      FROM county
      LEFT JOIN city
      ON county.city_code=city.city_code
    ) co
    ON co.COUNTY_ID=company.county_id
    where repast.id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteById" parameterType="java.lang.Integer" >
    delete from repast
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insertSelective" parameterType="nankai.xl.business.model.Repast" >
    insert into repast
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="factoryid != null" >
        factoryid,
      </if>
      <if test="year != null" >
        year,
      </if>
      <if test="cookingNum != null" >
        cooking_num,
      </if>
      <if test="cleanerNum != null" >
        cleaner_num,
      </if>
      <if test="scccode != null" >
        scccode,
      </if>
      <if test="smokeRate != null" >
        smoke_rate,
      </if>
      <if test="annualRuntime != null" >
        annual_runtime,
      </if>
      <if test="removalEffi != null" >
        removal_effi,
      </if>
      <if test="householdNum != null" >
        household_num,
      </if>
      <if test="pmEmission != null" >
        pm_emission,
      </if>
      <if test="pm10Emission != null" >
        pm10_emission,
      </if>
      <if test="pm25Emission != null" >
        pm25_emission,
      </if>
      <if test="so2Emission != null" >
        so2_emission,
      </if>
      <if test="noxEmission != null" >
        nox_emission,
      </if>
      <if test="coEmission != null" >
        co_emission,
      </if>
      <if test="nh3Emission != null" >
        nh3_emission,
      </if>
      <if test="vocEmission != null" >
        voc_emission,
      </if>
      <if test="ocEmission != null" >
        oc_emission,
      </if>
      <if test="bcEmission != null" >
        bc_emission,
      </if>
      <if test="flag != null" >
        flag,
      </if>
      <if test="gasConsumption != null" >
        gas_consumption,
      </if>
      <if test="coalConsumption != null" >
        coal_consumption,
      </if>
      <if test="coalgasConsumption != null" >
        coalgas_consumption,
      </if>
      <if test="powerConsumption != null" >
        power_consumption,
      </if>
      <if test="methanolConsumption != null" >
        methanol_consumption,
      </if>
      <if test="otherConsumption != null" >
        other_consumption,
      </if>
      <if test="otherConunit != null" >
        other_conunit,
      </if>
      <if test="oilConsumption != null" >
        oil_consumption,
      </if>
      <if test="sourceDiscrip != null" >
        source_discrip,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="factoryid != null" >
        #{factoryid,jdbcType=INTEGER},
      </if>
      <if test="year != null" >
        #{year,jdbcType=CHAR},
      </if>
      <if test="cookingNum != null" >
        #{cookingNum,jdbcType=INTEGER},
      </if>
      <if test="cleanerNum != null" >
        #{cleanerNum,jdbcType=INTEGER},
      </if>
      <if test="scccode != null" >
        #{scccode,jdbcType=CHAR},
      </if>
      <if test="smokeRate != null" >
        #{smokeRate,jdbcType=DOUBLE},
      </if>
      <if test="annualRuntime != null" >
        #{annualRuntime,jdbcType=INTEGER},
      </if>
      <if test="removalEffi != null" >
        #{removalEffi,jdbcType=DOUBLE},
      </if>
      <if test="householdNum != null" >
        #{householdNum,jdbcType=INTEGER},
      </if>
      <if test="pmEmission != null" >
        #{pmEmission,jdbcType=DOUBLE},
      </if>
      <if test="pm10Emission != null" >
        #{pm10Emission,jdbcType=DOUBLE},
      </if>
      <if test="pm25Emission != null" >
        #{pm25Emission,jdbcType=DOUBLE},
      </if>
      <if test="so2Emission != null" >
        #{so2Emission,jdbcType=DOUBLE},
      </if>
      <if test="noxEmission != null" >
        #{noxEmission,jdbcType=DOUBLE},
      </if>
      <if test="coEmission != null" >
        #{coEmission,jdbcType=DOUBLE},
      </if>
      <if test="nh3Emission != null" >
        #{nh3Emission,jdbcType=DOUBLE},
      </if>
      <if test="vocEmission != null" >
        #{vocEmission,jdbcType=DOUBLE},
      </if>
      <if test="ocEmission != null" >
        #{ocEmission,jdbcType=DOUBLE},
      </if>
      <if test="bcEmission != null" >
        #{bcEmission,jdbcType=DOUBLE},
      </if>
      <if test="flag != null" >
        #{flag,jdbcType=BIT},
      </if>
      <if test="gasConsumption != null" >
        #{gasConsumption,jdbcType=DOUBLE},
      </if>
      <if test="coalConsumption != null" >
        #{coalConsumption,jdbcType=DOUBLE},
      </if>
      <if test="coalgasConsumption != null" >
        #{coalgasConsumption,jdbcType=DOUBLE},
      </if>
      <if test="powerConsumption != null" >
        #{powerConsumption,jdbcType=DOUBLE},
      </if>
      <if test="methanolConsumption != null" >
        #{methanolConsumption,jdbcType=DOUBLE},
      </if>
      <if test="otherConsumption != null" >
        #{otherConsumption,jdbcType=DOUBLE},
      </if>
      <if test="otherConunit != null" >
        #{otherConunit,jdbcType=CHAR},
      </if>
      <if test="oilConsumption != null" >
        #{oilConsumption,jdbcType=DOUBLE},
      </if>
      <if test="sourceDiscrip != null" >
        #{sourceDiscrip,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <insert id="insertOrUpdate" parameterType="nankai.xl.business.model.Repast" >
    insert into repast (id, factoryid, year,
      cooking_num, cleaner_num, scccode,
      smoke_rate, annual_runtime, removal_effi,
      household_num, pm_emission, pm10_emission,
      pm25_emission, so2_emission, nox_emission,
      co_emission, nh3_emission, voc_emission,
      oc_emission, bc_emission, flag,
      gas_consumption, coal_consumption, coalgas_consumption,
      power_consumption, methanol_consumption, other_consumption,
      other_conunit, oil_consumption, source_discrip
      )
    values (#{id,jdbcType=INTEGER}, #{factoryid,jdbcType=INTEGER}, #{year,jdbcType=CHAR},
      #{cookingNum,jdbcType=INTEGER}, #{cleanerNum,jdbcType=INTEGER}, #{scccode,jdbcType=CHAR},
      #{smokeRate,jdbcType=DOUBLE}, #{annualRuntime,jdbcType=INTEGER}, #{removalEffi,jdbcType=DOUBLE},
      #{householdNum,jdbcType=INTEGER}, #{pmEmission,jdbcType=DOUBLE}, #{pm10Emission,jdbcType=DOUBLE},
      #{pm25Emission,jdbcType=DOUBLE}, #{so2Emission,jdbcType=DOUBLE}, #{noxEmission,jdbcType=DOUBLE},
      #{coEmission,jdbcType=DOUBLE}, #{nh3Emission,jdbcType=DOUBLE}, #{vocEmission,jdbcType=DOUBLE},
      #{ocEmission,jdbcType=DOUBLE}, #{bcEmission,jdbcType=DOUBLE}, #{flag,jdbcType=BIT},
      #{gasConsumption,jdbcType=DOUBLE}, #{coalConsumption,jdbcType=DOUBLE}, #{coalgasConsumption,jdbcType=DOUBLE}, 
      #{powerConsumption,jdbcType=DOUBLE}, #{methanolConsumption,jdbcType=DOUBLE}, #{otherConsumption,jdbcType=DOUBLE}, 
      #{otherConunit,jdbcType=CHAR}, #{oilConsumption,jdbcType=DOUBLE}, #{sourceDiscrip,jdbcType=VARCHAR}
      )
     ON DUPLICATE KEY UPDATE
      id = #{id,jdbcType=INTEGER},
      factoryid = #{factoryid,jdbcType=INTEGER},
      year = #{year,jdbcType=CHAR},
      cooking_num = #{cookingNum,jdbcType=INTEGER},
      cleaner_num = #{cleanerNum,jdbcType=INTEGER},
      scccode = #{scccode,jdbcType=CHAR},
      smoke_rate = #{smokeRate,jdbcType=DOUBLE},
      annual_runtime = #{annualRuntime,jdbcType=INTEGER},
      removal_effi = #{removalEffi,jdbcType=DOUBLE},
      household_num = #{householdNum,jdbcType=INTEGER},
      pm_emission = #{pmEmission,jdbcType=DOUBLE},
      pm10_emission = #{pm10Emission,jdbcType=DOUBLE},
      pm25_emission = #{pm25Emission,jdbcType=DOUBLE},
      so2_emission = #{so2Emission,jdbcType=DOUBLE},
      nox_emission = #{noxEmission,jdbcType=DOUBLE},
      co_emission = #{coEmission,jdbcType=DOUBLE},
      nh3_emission = #{nh3Emission,jdbcType=DOUBLE},
      voc_emission = #{vocEmission,jdbcType=DOUBLE},
      oc_emission = #{ocEmission,jdbcType=DOUBLE},
      bc_emission = #{bcEmission,jdbcType=DOUBLE},
      flag = #{flag,jdbcType=BIT},
      gas_consumption = #{gasConsumption,jdbcType=DOUBLE},
      coal_consumption = #{coalConsumption,jdbcType=DOUBLE},
      coalgas_consumption = #{coalgasConsumption,jdbcType=DOUBLE},
      power_consumption = #{powerConsumption,jdbcType=DOUBLE},
      methanol_consumption = #{methanolConsumption,jdbcType=DOUBLE},
      other_consumption = #{otherConsumption,jdbcType=DOUBLE},
      other_conunit = #{otherConunit,jdbcType=CHAR},
      oil_consumption = #{oilConsumption,jdbcType=DOUBLE},
      source_discrip = #{sourceDiscrip,jdbcType=VARCHAR}
  </insert>
  <insert id="insertList" parameterType="java.util.List">
    insert into repast (id, factoryid, year,
    cooking_num, cleaner_num, scccode,
    smoke_rate, annual_runtime, removal_effi,
    household_num, pm_emission, pm10_emission,
    pm25_emission, so2_emission, nox_emission,
    co_emission, nh3_emission, voc_emission,
    oc_emission, bc_emission, flag,
    gas_consumption, coal_consumption, coalgas_consumption,
    power_consumption, methanol_consumption, other_consumption,
    other_conunit, oil_consumption, source_discrip
    )
    VALUES
    <foreach collection="list"  index="index" item="item" separator=",">
      (
      #{item.id,jdbcType=INTEGER},#{item.factoryid,jdbcType=INTEGER},#{item.year,jdbcType=CHAR},#{item.cookingNum,jdbcType=INTEGER},
      #{item.cleanerNum,jdbcType=INTEGER},#{item.scccode,jdbcType=CHAR},#{item.smokeRate,jdbcType=DOUBLE},
      #{item.annualRuntime,jdbcType=INTEGER},#{item.removalEffi,jdbcType=DOUBLE},#{item.householdNum,jdbcType=INTEGER},
      #{item.pmEmission,jdbcType=DOUBLE},#{item.pm10Emission,jdbcType=DOUBLE},#{item.pm25Emission,jdbcType=DOUBLE},
      #{item.so2Emission,jdbcType=DOUBLE},#{item.noxEmission,jdbcType=DOUBLE},#{item.coEmission,jdbcType=DOUBLE},
      #{item.nh3Emission,jdbcType=DOUBLE},#{item.vocEmission,jdbcType=DOUBLE},#{item.ocEmission,jdbcType=DOUBLE},
      #{item.bcEmission,jdbcType=DOUBLE},#{item.flag,jdbcType=BIT},#{item.gasConsumption,jdbcType=DOUBLE},
      #{item.coalConsumption,jdbcType=DOUBLE},#{item.coalgasConsumption,jdbcType=DOUBLE},#{item.powerConsumption,jdbcType=DOUBLE},
      #{item.methanolConsumption,jdbcType=DOUBLE},#{item.otherConsumption,jdbcType=DOUBLE},#{item.otherConunit,jdbcType=CHAR},
      #{item.oilConsumption,jdbcType=DOUBLE},#{item.sourceDiscrip,jdbcType=VARCHAR}
      )
    </foreach>
  </insert>
  <update id="updateById" parameterType="nankai.xl.business.model.Repast" >
    update repast
    <set >
      <if test="factoryid != null" >
        factoryid = #{factoryid,jdbcType=INTEGER},
      </if>
      <if test="year != null" >
        year = #{year,jdbcType=CHAR},
      </if>
      <if test="cookingNum != null" >
        cooking_num = #{cookingNum,jdbcType=INTEGER},
      </if>
      <if test="cleanerNum != null" >
        cleaner_num = #{cleanerNum,jdbcType=INTEGER},
      </if>
      <if test="scccode != null" >
        scccode = #{scccode,jdbcType=CHAR},
      </if>
      <if test="smokeRate != null" >
        smoke_rate = #{smokeRate,jdbcType=DOUBLE},
      </if>
      <if test="annualRuntime != null" >
        annual_runtime = #{annualRuntime,jdbcType=INTEGER},
      </if>
      <if test="removalEffi != null" >
        removal_effi = #{removalEffi,jdbcType=DOUBLE},
      </if>
      <if test="householdNum != null" >
        household_num = #{householdNum,jdbcType=INTEGER},
      </if>
      <if test="pmEmission != null" >
        pm_emission = #{pmEmission,jdbcType=DOUBLE},
      </if>
      <if test="pm10Emission != null" >
        pm10_emission = #{pm10Emission,jdbcType=DOUBLE},
      </if>
      <if test="pm25Emission != null" >
        pm25_emission = #{pm25Emission,jdbcType=DOUBLE},
      </if>
      <if test="so2Emission != null" >
        so2_emission = #{so2Emission,jdbcType=DOUBLE},
      </if>
      <if test="noxEmission != null" >
        nox_emission = #{noxEmission,jdbcType=DOUBLE},
      </if>
      <if test="coEmission != null" >
        co_emission = #{coEmission,jdbcType=DOUBLE},
      </if>
      <if test="nh3Emission != null" >
        nh3_emission = #{nh3Emission,jdbcType=DOUBLE},
      </if>
      <if test="vocEmission != null" >
        voc_emission = #{vocEmission,jdbcType=DOUBLE},
      </if>
      <if test="ocEmission != null" >
        oc_emission = #{ocEmission,jdbcType=DOUBLE},
      </if>
      <if test="bcEmission != null" >
        bc_emission = #{bcEmission,jdbcType=DOUBLE},
      </if>
      <if test="flag != null" >
        flag = #{flag,jdbcType=BIT},
      </if>
      <if test="gasConsumption != null" >
        gas_consumption = #{gasConsumption,jdbcType=DOUBLE},
      </if>
      <if test="coalConsumption != null" >
        coal_consumption = #{coalConsumption,jdbcType=DOUBLE},
      </if>
      <if test="coalgasConsumption != null" >
        coalgas_consumption = #{coalgasConsumption,jdbcType=DOUBLE},
      </if>
      <if test="powerConsumption != null" >
        power_consumption = #{powerConsumption,jdbcType=DOUBLE},
      </if>
      <if test="methanolConsumption != null" >
        methanol_consumption = #{methanolConsumption,jdbcType=DOUBLE},
      </if>
      <if test="otherConsumption != null" >
        other_consumption = #{otherConsumption,jdbcType=DOUBLE},
      </if>
      <if test="otherConunit != null" >
        other_conunit = #{otherConunit,jdbcType=CHAR},
      </if>
      <if test="oilConsumption != null" >
        oil_consumption = #{oilConsumption,jdbcType=DOUBLE},
      </if>
      <if test="sourceDiscrip != null" >
        source_discrip = #{sourceDiscrip,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>