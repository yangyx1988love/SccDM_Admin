<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="nankai.xl.business.mapper.KilnMapper" >
  <resultMap id="BaseResultMap" type="nankai.xl.business.model.Kiln">
    <id column="ID" jdbcType="INTEGER" property="id" />
    <result column="NK_NO" jdbcType="INTEGER" property="nkNo" />
    <result column="EXHUST_ID" jdbcType="INTEGER" property="exhustId" />
    <result column="FUNCTIO" jdbcType="CHAR" property="functio" />
    <result column="KILN_MODEL" jdbcType="CHAR" property="kilnModel" />
    <result column="MODEL" jdbcType="VARCHAR" property="model" />
    <result column="fueltype" jdbcType="CHAR" property="fueltype" />
    <result column="SCCCODE" jdbcType="CHAR" property="scccode" />
    <result column="KILN_FUEL_AUSAGE" jdbcType="DOUBLE" property="kilnFuelAusage" />
    <result column="KILN_FUEL_AUSAGEUNIT" jdbcType="VARCHAR" property="kilnFuelAusageunit" />
    <result column="NITREREMOVEID" jdbcType="INTEGER" property="nitreremoveid" />
    <result column="DUSTREMOVEID" jdbcType="INTEGER" property="dustremoveid" />
    <result column="SULPHURREMOVEID" jdbcType="INTEGER" property="sulphurremoveid" />
    <result column="COALASH" jdbcType="DOUBLE" property="coalash" />
    <result column="coal_volatilisation" jdbcType="DOUBLE" property="coalVolatilisation" />
    <result column="COALSULFUR" jdbcType="DOUBLE" property="coalsulfur" />
    <result column="PM10" jdbcType="DOUBLE" property="pm10" />
    <result column="PM25" jdbcType="DOUBLE" property="pm25" />
    <result column="CO" jdbcType="DOUBLE" property="co" />
    <result column="VOC" jdbcType="DOUBLE" property="voc" />
    <result column="PM" jdbcType="DOUBLE" property="pm" />
    <result column="SO2" jdbcType="DOUBLE" property="so2" />
    <result column="NOX" jdbcType="DOUBLE" property="nox" />
    <result column="NH3" jdbcType="DOUBLE" property="nh3" />
    <result column="OC" jdbcType="DOUBLE" property="oc" />
    <result column="BC" jdbcType="DOUBLE" property="bc" />
    <result column="feiqiti" jdbcType="DOUBLE" property="feiqiti" />
    <result column="so2out" jdbcType="DOUBLE" property="so2out" />
    <result column="pmout" jdbcType="DOUBLE" property="pmout" />
    <result column="noxout" jdbcType="DOUBLE" property="noxout" />
    <result column="Jan_useamount" jdbcType="DOUBLE" property="janUseamount" />
    <result column="Feb_useamount" jdbcType="DOUBLE" property="febUseamount" />
    <result column="Mar_useamount" jdbcType="DOUBLE" property="marUseamount" />
    <result column="Apr_useamount" jdbcType="DOUBLE" property="aprUseamount" />
    <result column="May_useamount" jdbcType="DOUBLE" property="mayUseamount" />
    <result column="June_useamount" jdbcType="DOUBLE" property="juneUseamount" />
    <result column="July_useamount" jdbcType="DOUBLE" property="julyUseamount" />
    <result column="aug_useamount" jdbcType="DOUBLE" property="augUseamount" />
    <result column="sept_useamount" jdbcType="DOUBLE" property="septUseamount" />
    <result column="oct_use_amount" jdbcType="DOUBLE" property="octUseAmount" />
    <result column="nov_useamount" jdbcType="DOUBLE" property="novUseamount" />
    <result column="dec_useamount" jdbcType="DOUBLE" property="decUseamount" />
  </resultMap>
  <sql id="Base_Column_List">
    ID, NK_NO, EXHUST_ID, FUNCTIO, KILN_MODEL, MODEL, fueltype, SCCCODE, KILN_FUEL_AUSAGE,
    KILN_FUEL_AUSAGEUNIT, NITREREMOVEID, DUSTREMOVEID, SULPHURREMOVEID, COALASH, coal_volatilisation,
    COALSULFUR, PM10, PM25, CO, VOC, PM, SO2, NOX, NH3, OC, BC, feiqiti, so2out, pmout,
    noxout, Jan_useamount, Feb_useamount, Mar_useamount, Apr_useamount, May_useamount,
    June_useamount, July_useamount, aug_useamount, sept_useamount, oct_use_amount, nov_useamount,
    dec_useamount
  </sql>
  <select id="selectById" resultType="nankai.xl.business.model.Kiln" parameterType="java.lang.Integer" >
    select * from kiln
    where ID = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectByExhustId" resultType="nankai.xl.business.model.Kiln" parameterType="java.lang.Integer" >
    select * from kiln
    where EXHUST_ID = #{exhustId,jdbcType=INTEGER}
  </select>
  <select id="selectByFactoryId" resultType="nankai.xl.business.model.Kiln" parameterType="java.lang.Integer" >
     SELECT kiln.* FROM kiln
     INNER JOIN exhaust
     ON kiln.EXHUST_ID=exhaust.EXF_ID
     INNER JOIN factory
     ON factory.factory_id=exhaust.FACTORY_ID
     WHERE factory.factory_id= #{factoryId,jdbcType=INTEGER}
     ORDER BY kiln.NK_NO ASC
  </select>
  <select id="selectSum" resultType="nankai.xl.business.model.vo.KilnSumVo" parameterType="nankai.xl.business.model.vo.FactorySumCommonQuery" >
    SELECT * FROM(
      SELECT  factory.`year`,factory.factory_name,factory.factory_no,factory.city_code,factory.county_id,factory.city_name,
      factory.COUNTY_NAME,factory.`status`,factory.statusdec,factory.factory_id,
      factory.EXF_MATERIAL,factory.SMOKE_OUTA,
      scc.sccDec,
      kiln.*,sulphurremove.sulphur_method AS sulphurremoveDec,dustremove.dust_remove_name AS dustremoveDec,
      nitreremove.nitre_method AS nitreremoveDec
      FROM kiln
      LEFT JOIN sulphurremove
      ON sulphurremove.id=kiln.SULPHURREMOVEID
      LEFT JOIN dustremove
      ON dustremove.id=kiln.DUSTREMOVEID
      LEFT JOIN nitreremove
      ON nitreremove.id=kiln.NITREREMOVEID
      LEFT JOIN (
      SELECT CONCAT(scc_4.scc_1,scc_4.scc_2,scc_4.scc_3,scc_4.scc_4) AS sccCode,
        CONCAT(scc_1.description,'/',scc_2.description,'/',scc_3.description,'/',scc_4.description) AS sccDec
        FROM scc_4
        LEFT JOIN scc_1
        ON scc_4.scc_1=scc_1.scc_1
        LEFT JOIN scc_2
        ON scc_4.scc_1=scc_2.scc_1 AND scc_4.scc_2=scc_2.scc_2
        LEFT JOIN scc_3
        ON scc_4.scc_1=scc_3.scc_1 AND scc_4.scc_2=scc_3.scc_2 AND scc_4.scc_3=scc_3.scc_3
      )scc
      ON scc.sccCode=kiln.SCCCODE
      LEFT JOIN (
        SELECT factory.`year`,factory.factory_name,factory.factory_no,city.city_code,factory.county_id,city.city_name,
        county.COUNTY_NAME,factory.`status`,status.introduction AS statusdec,factory.factory_id,
        exhaust.EXF_MATERIAL,exhaust.SMOKE_OUTA,exhaust.EXF_ID
        FROM exhaust
        LEFT JOIN factory
        ON factory.factory_id=exhaust.FACTORY_ID
        LEFT JOIN county
        ON factory.county_id=county.county_id
        LEFT JOIN city
        ON county.city_code=city.city_code
        LEFT JOIN `status`
        ON factory.`status`=`status`.id
      )factory
      ON factory.EXF_ID=kiln.EXHUST_ID
    )ss
    <where>
      <if test="year != null and year != ''">
        year = #{year}
      </if>
      <if test="countyId != null and countyId != ''">
        AND county_id = #{countyId}
      </if>
      <if test="cityCode != null and cityCode != ''">
        AND city_code = #{cityCode}
      </if>
      <if test="status != null and status != ''">
        AND status = #{status}
      </if>
    </where>
    ORDER BY FACTORY_ID,NK_NO ASC
  </select>
  <select id="countByCity" resultType="nankai.xl.business.model.vo.SumVo">
    SELECT COUNT(ss.ID) AS value,city.city_name AS name FROM county
    INNER JOIN (
        SELECT kiln.ID,factory.county_id FROM kiln
        INNER JOIN exhaust
        ON exhaust.EXF_ID=kiln.EXHUST_ID
        INNER JOIN factory
        ON exhaust.FACTORY_ID=factory.factory_id
    ) ss
    ON county.COUNTY_ID=ss.county_id
    INNER JOIN city
    ON county.city_code=city.city_code
    GROUP BY county.city_code
  </select>
  <select id="countByCounty" resultType="nankai.xl.business.model.vo.SumVo">
    SELECT COUNT(ss.ID) AS value,CONCAT(city.city_name,'-',county.COUNTY_NAME) AS name FROM county
    LEFT JOIN (
        SELECT kiln.ID,factory.county_id FROM kiln
        INNER JOIN exhaust
        ON exhaust.EXF_ID=kiln.EXHUST_ID
        INNER JOIN factory
        ON exhaust.FACTORY_ID=factory.factory_id
    ) ss
    ON county.COUNTY_ID=ss.county_id
    INNER JOIN city
    ON county.city_code=city.city_code
    GROUP BY county.COUNTY_ID
    ORDER BY county.city_code ASC
  </select>
  <update id="updateById" parameterType="nankai.xl.business.model.Kiln" >
    update kiln
    <set >
      <if test="exhustId != null" >
        EXHUST_ID = #{exhustId,jdbcType=INTEGER},
      </if>
      <if test="tkilnId != null" >
        TKILN_ID = #{tkilnId,jdbcType=INTEGER},
      </if>
      <if test="nkNo != null" >
        NK_NO = #{nkNo,jdbcType=INTEGER},
      </if>
      <if test="kilnNo != null" >
        KILN_NO = #{kilnNo,jdbcType=CHAR},
      </if>
      <if test="functionDec != null" >
        FUNCTION_Dec = #{functionDec,jdbcType=VARCHAR},
      </if>
      <if test="functio != null" >
        FUNCTIO = #{functio,jdbcType=CHAR},
      </if>
      <if test="modelDec != null" >
        MODEL_DEC = #{modelDec,jdbcType=VARCHAR},
      </if>
      <if test="kilnModel != null" >
        KILN_MODEL = #{kilnModel,jdbcType=CHAR},
      </if>
      <if test="model != null" >
        MODEL = #{model,jdbcType=VARCHAR},
      </if>
      <if test="fueltypeDec != null" >
        fueltype_dec = #{fueltypeDec,jdbcType=VARCHAR},
      </if>
      <if test="fueltype != null" >
        fueltype = #{fueltype,jdbcType=CHAR},
      </if>
      <if test="kilnFuelAusage != null" >
        KILN_FUEL_AUSAGE = #{kilnFuelAusage,jdbcType=DOUBLE},
      </if>
      <if test="kilnFuelAusageunit != null" >
        KILN_FUEL_AUSAGEUNIT = #{kilnFuelAusageunit,jdbcType=VARCHAR},
      </if>
      <if test="nitreremovedec != null" >
        NITREREMOVEDEC = #{nitreremovedec,jdbcType=VARCHAR},
      </if>
      <if test="nitreremoveid != null" >
        NITREREMOVEID = #{nitreremoveid,jdbcType=INTEGER},
      </if>
      <if test="dustremovedec != null" >
        DUSTREMOVEDEC = #{dustremovedec,jdbcType=VARCHAR},
      </if>
      <if test="dustremoveid != null" >
        DUSTREMOVEID = #{dustremoveid,jdbcType=INTEGER},
      </if>
      <if test="sulphurremovedec != null" >
        SULPHURREMOVEDEC = #{sulphurremovedec,jdbcType=VARCHAR},
      </if>
      <if test="sulphurremoveid != null" >
        SULPHURREMOVEID = #{sulphurremoveid,jdbcType=INTEGER},
      </if>
      <if test="exfNo != null" >
        EXF_NO = #{exfNo,jdbcType=TINYINT},
      </if>
      <if test="coalash != null" >
        COALASH = #{coalash,jdbcType=DOUBLE},
      </if>
      <if test="coalVolatilisation != null" >
        coal_volatilisation = #{coalVolatilisation,jdbcType=DOUBLE},
      </if>
      <if test="coalsulfur != null" >
        COALSULFUR = #{coalsulfur,jdbcType=DOUBLE},
      </if>
      <if test="factorPm10 != null" >
        factor_pm10 = #{factorPm10,jdbcType=DOUBLE},
      </if>
      <if test="factorStatus != null" >
        factor_status = #{factorStatus,jdbcType=TINYINT},
      </if>
      <if test="pm10 != null" >
        PM10 = #{pm10,jdbcType=DOUBLE},
      </if>
      <if test="factorPm25 != null" >
        factor_pm25 = #{factorPm25,jdbcType=DOUBLE},
      </if>
      <if test="pm25 != null" >
        PM25 = #{pm25,jdbcType=DOUBLE},
      </if>
      <if test="factorCo != null" >
        factor_CO = #{factorCo,jdbcType=DOUBLE},
      </if>
      <if test="co != null" >
        CO = #{co,jdbcType=DOUBLE},
      </if>
      <if test="factorVoc != null" >
        factor_VOC = #{factorVoc,jdbcType=DOUBLE},
      </if>
      <if test="voc != null" >
        VOC = #{voc,jdbcType=DOUBLE},
      </if>
      <if test="factorPm != null" >
        factor_PM = #{factorPm,jdbcType=DOUBLE},
      </if>
      <if test="pm != null" >
        PM = #{pm,jdbcType=DOUBLE},
      </if>
      <if test="factorSo2 != null" >
        factor_SO2 = #{factorSo2,jdbcType=DOUBLE},
      </if>
      <if test="so2 != null" >
        SO2 = #{so2,jdbcType=DOUBLE},
      </if>
      <if test="factorNox != null" >
        factor_NOX = #{factorNox,jdbcType=DOUBLE},
      </if>
      <if test="nox != null" >
        NOX = #{nox,jdbcType=DOUBLE},
      </if>
      <if test="factorNh3 != null" >
        factor_NH3 = #{factorNh3,jdbcType=DOUBLE},
      </if>
      <if test="nh3 != null" >
        NH3 = #{nh3,jdbcType=DOUBLE},
      </if>
      <if test="factorOc != null" >
        factor_OC = #{factorOc,jdbcType=DOUBLE},
      </if>
      <if test="oc != null" >
        OC = #{oc,jdbcType=DOUBLE},
      </if>
      <if test="factorBc != null" >
        factor_BC = #{factorBc,jdbcType=DOUBLE},
      </if>
      <if test="bc != null" >
        BC = #{bc,jdbcType=DOUBLE},
      </if>
      <if test="scccode != null" >
        SCCCODE = #{scccode,jdbcType=CHAR},
      </if>
      <if test="feiqiti != null" >
        feiqiti = #{feiqiti,jdbcType=DOUBLE},
      </if>
      <if test="so2out != null" >
        so2out = #{so2out,jdbcType=DOUBLE},
      </if>
      <if test="pmout != null" >
        pmout = #{pmout,jdbcType=DOUBLE},
      </if>
      <if test="noxout != null" >
        noxout = #{noxout,jdbcType=DOUBLE},
      </if>
      <if test="janUseamount != null" >
        Jan_useamount = #{janUseamount,jdbcType=DOUBLE},
      </if>
      <if test="febUseamount != null" >
        Feb_useamount = #{febUseamount,jdbcType=DOUBLE},
      </if>
      <if test="marUseamount != null" >
        Mar_useamount = #{marUseamount,jdbcType=DOUBLE},
      </if>
      <if test="aprUseamount != null" >
        Apr_useamount = #{aprUseamount,jdbcType=DOUBLE},
      </if>
      <if test="mayUseamount != null" >
        May_useamount = #{mayUseamount,jdbcType=DOUBLE},
      </if>
      <if test="juneUseamount != null" >
        June_useamount = #{juneUseamount,jdbcType=DOUBLE},
      </if>
      <if test="julyUseamount != null" >
        July_useamount = #{julyUseamount,jdbcType=DOUBLE},
      </if>
      <if test="augUseamount != null" >
        aug_useamount = #{augUseamount,jdbcType=DOUBLE},
      </if>
      <if test="septUseamount != null" >
        sept_useamount = #{septUseamount,jdbcType=DOUBLE},
      </if>
      <if test="octUseAmount != null" >
        oct_use_amount = #{octUseAmount,jdbcType=DOUBLE},
      </if>
      <if test="novUseamount != null" >
        nov_useamount = #{novUseamount,jdbcType=DOUBLE},
      </if>
      <if test="decUseamount != null" >
        dec_useamount = #{decUseamount,jdbcType=DOUBLE},
      </if>
    </set>
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <insert id="insertOrUpdate" parameterType="nankai.xl.business.model.Kiln" >
    insert into kiln (ID, EXHUST_ID, TKILN_ID, 
      NK_NO, KILN_NO, FUNCTION_Dec, 
      FUNCTIO, MODEL_DEC, KILN_MODEL, 
      MODEL, fueltype_dec, fueltype, 
      KILN_FUEL_AUSAGE, KILN_FUEL_AUSAGEUNIT, NITREREMOVEDEC, 
      NITREREMOVEID, DUSTREMOVEDEC, DUSTREMOVEID, 
      SULPHURREMOVEDEC, SULPHURREMOVEID, EXF_NO, 
      COALASH, coal_volatilisation, COALSULFUR, 
      factor_pm10, factor_status, PM10, 
      factor_pm25, PM25, factor_CO, 
      CO, factor_VOC, VOC, factor_PM, 
      PM, factor_SO2, SO2, factor_NOX, 
      NOX, factor_NH3, NH3, factor_OC, 
      OC, factor_BC, BC, SCCCODE, 
      feiqiti, so2out, pmout, 
      noxout, Jan_useamount, Feb_useamount, 
      Mar_useamount, Apr_useamount, May_useamount, 
      June_useamount, July_useamount, aug_useamount, 
      sept_useamount, oct_use_amount, nov_useamount, 
      dec_useamount)
    values (#{id,jdbcType=INTEGER}, #{exhustId,jdbcType=INTEGER}, #{tkilnId,jdbcType=INTEGER}, 
      #{nkNo,jdbcType=INTEGER}, #{kilnNo,jdbcType=CHAR}, #{functionDec,jdbcType=VARCHAR}, 
      #{functio,jdbcType=CHAR}, #{modelDec,jdbcType=VARCHAR}, #{kilnModel,jdbcType=CHAR}, 
      #{model,jdbcType=VARCHAR}, #{fueltypeDec,jdbcType=VARCHAR}, #{fueltype,jdbcType=CHAR}, 
      #{kilnFuelAusage,jdbcType=DOUBLE}, #{kilnFuelAusageunit,jdbcType=VARCHAR}, #{nitreremovedec,jdbcType=VARCHAR}, 
      #{nitreremoveid,jdbcType=INTEGER}, #{dustremovedec,jdbcType=VARCHAR}, #{dustremoveid,jdbcType=INTEGER}, 
      #{sulphurremovedec,jdbcType=VARCHAR}, #{sulphurremoveid,jdbcType=INTEGER}, #{exfNo,jdbcType=TINYINT}, 
      #{coalash,jdbcType=DOUBLE}, #{coalVolatilisation,jdbcType=DOUBLE}, #{coalsulfur,jdbcType=DOUBLE}, 
      #{factorPm10,jdbcType=DOUBLE}, #{factorStatus,jdbcType=TINYINT}, #{pm10,jdbcType=DOUBLE}, 
      #{factorPm25,jdbcType=DOUBLE}, #{pm25,jdbcType=DOUBLE}, #{factorCo,jdbcType=DOUBLE}, 
      #{co,jdbcType=DOUBLE}, #{factorVoc,jdbcType=DOUBLE}, #{voc,jdbcType=DOUBLE}, #{factorPm,jdbcType=DOUBLE}, 
      #{pm,jdbcType=DOUBLE}, #{factorSo2,jdbcType=DOUBLE}, #{so2,jdbcType=DOUBLE}, #{factorNox,jdbcType=DOUBLE}, 
      #{nox,jdbcType=DOUBLE}, #{factorNh3,jdbcType=DOUBLE}, #{nh3,jdbcType=DOUBLE}, #{factorOc,jdbcType=DOUBLE}, 
      #{oc,jdbcType=DOUBLE}, #{factorBc,jdbcType=DOUBLE}, #{bc,jdbcType=DOUBLE}, #{scccode,jdbcType=CHAR}, 
      #{feiqiti,jdbcType=DOUBLE}, #{so2out,jdbcType=DOUBLE}, #{pmout,jdbcType=DOUBLE}, 
      #{noxout,jdbcType=DOUBLE}, #{janUseamount,jdbcType=DOUBLE}, #{febUseamount,jdbcType=DOUBLE}, 
      #{marUseamount,jdbcType=DOUBLE}, #{aprUseamount,jdbcType=DOUBLE}, #{mayUseamount,jdbcType=DOUBLE}, 
      #{juneUseamount,jdbcType=DOUBLE}, #{julyUseamount,jdbcType=DOUBLE}, #{augUseamount,jdbcType=DOUBLE}, 
      #{septUseamount,jdbcType=DOUBLE}, #{octUseAmount,jdbcType=DOUBLE}, #{novUseamount,jdbcType=DOUBLE}, 
      #{decUseamount,jdbcType=DOUBLE})
      ON DUPLICATE KEY UPDATE
      ID = #{id,jdbcType=INTEGER},
      EXHUST_ID = #{exhustId,jdbcType=INTEGER},
      TKILN_ID = #{tkilnId,jdbcType=INTEGER},
      NK_NO = #{nkNo,jdbcType=INTEGER},
      KILN_NO = #{kilnNo,jdbcType=CHAR},
      FUNCTION_Dec = #{functionDec,jdbcType=VARCHAR},
      FUNCTIO = #{functio,jdbcType=CHAR},
      MODEL_DEC = #{modelDec,jdbcType=VARCHAR},
      KILN_MODEL = #{kilnModel,jdbcType=CHAR},
      MODEL = #{model,jdbcType=VARCHAR},
      fueltype_dec = #{fueltypeDec,jdbcType=VARCHAR},
      fueltype = #{fueltype,jdbcType=CHAR},
      KILN_FUEL_AUSAGE = #{kilnFuelAusage,jdbcType=DOUBLE},
      KILN_FUEL_AUSAGEUNIT = #{kilnFuelAusageunit,jdbcType=VARCHAR},
      NITREREMOVEDEC = #{nitreremovedec,jdbcType=VARCHAR},
      NITREREMOVEID = #{nitreremoveid,jdbcType=INTEGER},
      DUSTREMOVEDEC = #{dustremovedec,jdbcType=VARCHAR},
      DUSTREMOVEID = #{dustremoveid,jdbcType=INTEGER},
      SULPHURREMOVEDEC = #{sulphurremovedec,jdbcType=VARCHAR},
      SULPHURREMOVEID = #{sulphurremoveid,jdbcType=INTEGER},
      EXF_NO = #{exfNo,jdbcType=TINYINT},
      COALASH = #{coalash,jdbcType=DOUBLE},
      coal_volatilisation = #{coalVolatilisation,jdbcType=DOUBLE},
      COALSULFUR = #{coalsulfur,jdbcType=DOUBLE},
      factor_pm10 = #{factorPm10,jdbcType=DOUBLE},
      factor_status = #{factorStatus,jdbcType=TINYINT},
      PM10 = #{pm10,jdbcType=DOUBLE},
      factor_pm25 = #{factorPm25,jdbcType=DOUBLE},
      PM25 = #{pm25,jdbcType=DOUBLE},
      factor_CO = #{factorCo,jdbcType=DOUBLE},
      CO = #{co,jdbcType=DOUBLE},
      factor_VOC = #{factorVoc,jdbcType=DOUBLE},
      VOC = #{voc,jdbcType=DOUBLE},
      factor_PM = #{factorPm,jdbcType=DOUBLE},
      PM = #{pm,jdbcType=DOUBLE},
      factor_SO2 = #{factorSo2,jdbcType=DOUBLE},
      SO2 = #{so2,jdbcType=DOUBLE},
      factor_NOX = #{factorNox,jdbcType=DOUBLE},
      NOX = #{nox,jdbcType=DOUBLE},
      factor_NH3 = #{factorNh3,jdbcType=DOUBLE},
      NH3 = #{nh3,jdbcType=DOUBLE},
      factor_OC = #{factorOc,jdbcType=DOUBLE},
      OC = #{oc,jdbcType=DOUBLE},
      factor_BC = #{factorBc,jdbcType=DOUBLE},
      BC = #{bc,jdbcType=DOUBLE},
      SCCCODE = #{scccode,jdbcType=CHAR},
      feiqiti = #{feiqiti,jdbcType=DOUBLE},
      so2out = #{so2out,jdbcType=DOUBLE},
      pmout = #{pmout,jdbcType=DOUBLE},
      noxout = #{noxout,jdbcType=DOUBLE},
      Jan_useamount = #{janUseamount,jdbcType=DOUBLE},
      Feb_useamount = #{febUseamount,jdbcType=DOUBLE},
      Mar_useamount = #{marUseamount,jdbcType=DOUBLE},
      Apr_useamount = #{aprUseamount,jdbcType=DOUBLE},
      May_useamount = #{mayUseamount,jdbcType=DOUBLE},
      June_useamount = #{juneUseamount,jdbcType=DOUBLE},
      July_useamount = #{julyUseamount,jdbcType=DOUBLE},
      aug_useamount = #{augUseamount,jdbcType=DOUBLE},
      sept_useamount = #{septUseamount,jdbcType=DOUBLE},
      oct_use_amount = #{octUseAmount,jdbcType=DOUBLE},
      nov_useamount = #{novUseamount,jdbcType=DOUBLE},
      dec_useamount = #{decUseamount,jdbcType=DOUBLE}
  </insert>


</mapper>