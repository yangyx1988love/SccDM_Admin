<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="nankai.xl.business.mapper.OilSourceMapper" >
  <resultMap id="BaseResultMap" type="nankai.xl.business.model.OilSource" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="company_id" property="companyId" jdbcType="INTEGER" />
    <result column="year" property="year" jdbcType="CHAR" />
    <result column="oil_type" property="oilType" jdbcType="CHAR" />
    <result column="scccode" property="scccode" jdbcType="CHAR" />
    <result column="source_discrip" property="sourceDiscrip" jdbcType="VARCHAR" />
    <result column="sales_volume" property="salesVolume" jdbcType="DOUBLE" />
    <result column="emission" property="emission" jdbcType="DOUBLE" />
    <result column="flag" property="flag" jdbcType="INTEGER" />
    <result column="volume" property="volume" jdbcType="DOUBLE" />
    <result column="every_volume" property="everyVolume" jdbcType="DOUBLE" />
    <result column="volume_count" property="volumeCount" jdbcType="DOUBLE" />
    <result column="gun_num" property="gunNum" jdbcType="INTEGER" />
    <result column="tank_num" property="tankNum" jdbcType="INTEGER" />
    <result column="county_id" property="countyId" jdbcType="CHAR" />
    <result column="COUNTY_NAME" property="countyName" jdbcType="CHAR" />
    <result column="company_name" property="companyName" jdbcType="VARCHAR" />
    <result column="address" property="address" jdbcType="VARCHAR" />
  </resultMap>
  <select id="selectByExample" resultType="nankai.xl.business.model.vo.OilSourceVo" parameterType="nankai.xl.business.model.vo.OilSourceVo" >
    SELECT cc_oil_source.*,company.*,co.COUNTY_NAME,co.city_code,co.city_name,SUBSTR(cc_oil_source.scccode,1,2) AS scc1,
    SUBSTR(cc_oil_source.scccode,3,2) AS scc2,SUBSTR(cc_oil_source.scccode,5,3) AS scc3,SUBSTR(cc_oil_source.scccode,8,3) AS scc4
    FROM cc_oil_source
    LEFT JOIN company
    ON cc_oil_source.company_id=company.com_id
    LEFT JOIN (
      SELECT county.COUNTY_ID,county.COUNTY_NAME,city.city_name,city.city_code
      FROM county
      LEFT JOIN city
      ON county.city_code=city.city_code
    ) co
    ON co.COUNTY_ID=company.county_id
    <where>
      <if test="year != null and year != ''">
        cc_oil_source.year = #{year}
      </if>
      <if test="countyId != null and countyId != ''">
        AND company.county_id = #{countyId}
      </if>
      <if test="cityCode != null and cityCode != ''">
        AND co.city_code = #{cityCode}
      </if>
    </where>
  </select>
  <select id="selectById" resultType="nankai.xl.business.model.vo.OilSourceVo" parameterType="java.lang.Integer" >
    SELECT cc_oil_source.*,company.*,co.COUNTY_NAME,co.city_code,co.city_name,SUBSTR(cc_oil_source.scccode,1,2) AS scc1,
    SUBSTR(cc_oil_source.scccode,3,2) AS scc2,SUBSTR(cc_oil_source.scccode,5,3) AS scc3,SUBSTR(cc_oil_source.scccode,8,3) AS scc4
    FROM cc_oil_source
    LEFT JOIN company
    ON cc_oil_source.company_id=company.com_id
    LEFT JOIN (
      SELECT county.COUNTY_ID,county.COUNTY_NAME,city.city_name,city.city_code
      FROM county
      LEFT JOIN city
      ON county.city_code=city.city_code
    ) co
    ON co.COUNTY_ID=company.county_id
    where cc_oil_source.id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteById" parameterType="java.lang.Integer" >
    delete from cc_oil_source
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insertSelective" parameterType="nankai.xl.business.model.OilSource" >
    insert into cc_oil_source
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="companyId != null" >
        company_id,
      </if>
      <if test="year != null" >
        year,
      </if>
      <if test="oilType != null" >
        oil_type,
      </if>
      <if test="scccode != null" >
        scccode,
      </if>
      <if test="sourceDiscrip != null" >
        source_discrip,
      </if>
      <if test="salesVolume != null" >
        sales_volume,
      </if>
      <if test="emission != null" >
        emission,
      </if>
      <if test="flag != null" >
        flag,
      </if>
      <if test="volume != null" >
        volume,
      </if>
      <if test="everyVolume != null" >
        every_volume,
      </if>
      <if test="volumeCount != null" >
        volume_count,
      </if>
      <if test="gunNum != null" >
        gun_num,
      </if>
      <if test="tankNum != null" >
        tank_num,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="companyId != null" >
        #{companyId,jdbcType=INTEGER},
      </if>
      <if test="year != null" >
        #{year,jdbcType=CHAR},
      </if>
      <if test="oilType != null" >
        #{oilType,jdbcType=CHAR},
      </if>
      <if test="scccode != null" >
        #{scccode,jdbcType=CHAR},
      </if>
      <if test="sourceDiscrip != null" >
        #{sourceDiscrip,jdbcType=VARCHAR},
      </if>
      <if test="salesVolume != null" >
        #{salesVolume,jdbcType=DOUBLE},
      </if>
      <if test="emission != null" >
        #{emission,jdbcType=DOUBLE},
      </if>
      <if test="flag != null" >
        #{flag,jdbcType=INTEGER},
      </if>
      <if test="volume != null" >
        #{volume,jdbcType=DOUBLE},
      </if>
      <if test="everyVolume != null" >
        #{everyVolume,jdbcType=DOUBLE},
      </if>
      <if test="volumeCount != null" >
        #{volumeCount,jdbcType=DOUBLE},
      </if>
      <if test="gunNum != null" >
        #{gunNum,jdbcType=INTEGER},
      </if>
      <if test="tankNum != null" >
        #{tankNum,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <insert id="insertOrUpdate" parameterType="nankai.xl.business.model.OilSource" >
    insert into cc_oil_source (id, company_id, year, 
      oil_type, scccode, source_discrip, 
      sales_volume, emission, flag, 
      volume, every_volume, volume_count, 
      gun_num, tank_num)
    values (#{id,jdbcType=INTEGER}, #{companyId,jdbcType=INTEGER}, #{year,jdbcType=CHAR}, 
      #{oilType,jdbcType=CHAR}, #{scccode,jdbcType=CHAR}, #{sourceDiscrip,jdbcType=VARCHAR}, 
      #{salesVolume,jdbcType=DOUBLE}, #{emission,jdbcType=DOUBLE}, #{flag,jdbcType=INTEGER}, 
      #{volume,jdbcType=DOUBLE}, #{everyVolume,jdbcType=DOUBLE}, #{volumeCount,jdbcType=DOUBLE}, 
      #{gunNum,jdbcType=INTEGER}, #{tankNum,jdbcType=INTEGER})
    ON DUPLICATE KEY UPDATE    
      id = #{id,jdbcType=INTEGER},
      company_id = #{companyId,jdbcType=INTEGER},
      year = #{year,jdbcType=CHAR},
      oil_type = #{oilType,jdbcType=CHAR},
      scccode = #{scccode,jdbcType=CHAR},
      source_discrip = #{sourceDiscrip,jdbcType=VARCHAR},
      sales_volume = #{salesVolume,jdbcType=DOUBLE},
      emission = #{emission,jdbcType=DOUBLE},
      flag = #{flag,jdbcType=INTEGER},
      volume = #{volume,jdbcType=DOUBLE},
      every_volume = #{everyVolume,jdbcType=DOUBLE},
      volume_count = #{volumeCount,jdbcType=DOUBLE},
      gun_num = #{gunNum,jdbcType=INTEGER},
      tank_num = #{tankNum,jdbcType=INTEGER}
  </insert>
  <insert id="insertList" parameterType="java.util.List">
    INSERT INTO cc_oil_source (id, company_id, year,
    oil_type, scccode, source_discrip,
    sales_volume, emission, flag,
    volume, every_volume, volume_count,
    gun_num, tank_num)
    VALUES
    <foreach collection="list"  index="index" item="item" separator=",">
      (
      #{item.id,jdbcType=INTEGER},#{item.companyId,jdbcType=INTEGER},#{item.year,jdbcType=CHAR},
      #{item.oilType,jdbcType=CHAR},#{item.scccode,jdbcType=CHAR},#{item.sourceDiscrip,jdbcType=VARCHAR},
      #{item.salesVolume,jdbcType=DOUBLE},#{item.emission,jdbcType=DOUBLE},#{item.flag,jdbcType=INTEGER},
      #{item.volume,jdbcType=DOUBLE},#{item.everyVolume,jdbcType=DOUBLE},#{item.volumeCount,jdbcType=DOUBLE},
      #{item.gunNum,jdbcType=INTEGER},#{item.tankNum,jdbcType=INTEGER}
      )
    </foreach>
  </insert>
  <update id="updateById" parameterType="nankai.xl.business.model.OilSource" >
    update cc_oil_source
    <set >
      <if test="companyId != null" >
        company_id = #{companyId,jdbcType=INTEGER},
      </if>
      <if test="year != null" >
        year = #{year,jdbcType=CHAR},
      </if>
      <if test="oilType != null" >
        oil_type = #{oilType,jdbcType=CHAR},
      </if>
      <if test="scccode != null" >
        scccode = #{scccode,jdbcType=CHAR},
      </if>
      <if test="sourceDiscrip != null" >
        source_discrip = #{sourceDiscrip,jdbcType=VARCHAR},
      </if>
      <if test="salesVolume != null" >
        sales_volume = #{salesVolume,jdbcType=DOUBLE},
      </if>
      <if test="emission != null" >
        emission = #{emission,jdbcType=DOUBLE},
      </if>
      <if test="flag != null" >
        flag = #{flag,jdbcType=INTEGER},
      </if>
      <if test="volume != null" >
        volume = #{volume,jdbcType=DOUBLE},
      </if>
      <if test="everyVolume != null" >
        every_volume = #{everyVolume,jdbcType=DOUBLE},
      </if>
      <if test="volumeCount != null" >
        volume_count = #{volumeCount,jdbcType=DOUBLE},
      </if>
      <if test="gunNum != null" >
        gun_num = #{gunNum,jdbcType=INTEGER},
      </if>
      <if test="tankNum != null" >
        tank_num = #{tankNum,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>