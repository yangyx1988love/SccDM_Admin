<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="nankai.xl.business.mapper.DeviceMapper" >
  <resultMap id="BaseResultMap" type="nankai.xl.business.model.Device">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="nk_no" jdbcType="INTEGER" property="nkNo" />
    <result column="EXHUST_ID" jdbcType="INTEGER" property="exhustId" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="device_flow" jdbcType="VARCHAR" property="deviceFlow" />
    <result column="design_power" jdbcType="DOUBLE" property="designPower" />
    <result column="practical_power" jdbcType="DOUBLE" property="practicalPower" />
    <result column="yearrun_days" jdbcType="INTEGER" property="yearrunDays" />
    <result column="design_unit" jdbcType="CHAR" property="designUnit" />
    <result column="factory_id" jdbcType="INTEGER" property="factoryId" />
  </resultMap>
  <sql id="Base_Column_List">
    id, nk_no, EXHUST_ID, name, device_flow, design_power, practical_power, yearrun_days,
    design_unit,factory_id
  </sql>
  <select id="selectById" resultType="nankai.xl.business.model.Device" parameterType="java.lang.Integer" >
    select * FROM device
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectByFactoryId" resultType="nankai.xl.business.model.Device" parameterType="java.lang.Integer">
    select * FROM device
    where factory_id = #{factoryId,jdbcType=INTEGER}
    ORDER BY NK_NO ASC
  </select>
  <select id="selectSum" resultType="nankai.xl.business.model.vo.DeviceSumVo" parameterType="nankai.xl.business.model.vo.FactorySumCommonQuery" >
    SELECT * FROM (
      SELECT  factory.`year`,factory.factory_name,factory.factory_no,factory.city_code,factory.county_id,factory.city_name,
      factory.COUNTY_NAME,factory.`status`,factory.statusdec,
      exhaust.EXF_MATERIAL,exhaust.SMOKE_OUTA,
      device.*
      FROM device
      LEFT JOIN exhaust
      ON exhaust.EXF_ID=device.EXHUST_ID
      LEFT JOIN (
        SELECT factory.factory_id,factory.`year`,factory.factory_name,factory.factory_no,city.city_code,factory.county_id,city.city_name,
        county.COUNTY_NAME,factory.`status`,status.introduction AS statusdec
        FROM factory
        LEFT JOIN county
        ON factory.county_id=county.county_id
        LEFT JOIN city
        ON county.city_code=city.city_code
        LEFT JOIN `status`
        ON factory.`status`=`status`.id
      )factory
      ON factory.factory_id=device.factory_id
    )ss
    <where>
      <if test="year != null and year != ''">
        year = #{year}
      </if>
      <if test="countyId != null and countyId != ''">
        AND county_id = #{countyId}
      </if>
      <if test="cityCode != null and cityCode != ''">
        AND city_code = #{cityCode}
      </if>
      <if test="status != null and status != ''">
        AND status = #{status}
      </if>
    </where>
    ORDER BY FACTORY_ID,NK_NO ASC
  </select>
  <update id="updateById" parameterType="nankai.xl.business.model.Device" >
    update device
    <set>
      <if test="nkNo != null">
        nk_no = #{nkNo,jdbcType=INTEGER},
      </if>
      <if test="exhustId != null">
        EXHUST_ID = #{exhustId,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="deviceFlow != null">
        device_flow = #{deviceFlow,jdbcType=VARCHAR},
      </if>
      <if test="designPower != null">
        design_power = #{designPower,jdbcType=DOUBLE},
      </if>
      <if test="practicalPower != null">
        practical_power = #{practicalPower,jdbcType=DOUBLE},
      </if>
      <if test="yearrunDays != null">
        yearrun_days = #{yearrunDays,jdbcType=INTEGER},
      </if>
      <if test="designUnit != null">
        design_unit = #{designUnit,jdbcType=CHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>