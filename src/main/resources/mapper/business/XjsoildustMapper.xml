<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="nankai.xl.business.mapper.XjsoildustMapper" >
  <resultMap id="BaseResultMap" type="nankai.xl.business.model.vo.XjsoildustVo" >
    <id column="sd_id" property="sdId" jdbcType="INTEGER" />
    <result column="scccode" property="scccode" jdbcType="CHAR" />
    <result column="county_id" property="countyId" jdbcType="CHAR" />
    <result column="sd_year" property="sdYear" jdbcType="CHAR" />
    <result column="sd_takemeasures" property="sdTakemeasures" jdbcType="VARCHAR" />
    <result column="sd_utype" property="sdUtype" jdbcType="VARCHAR" />
    <result column="sd_soiltype" property="sdSoiltype" jdbcType="VARCHAR" />
    <result column="sd_area" property="sdArea" jdbcType="DOUBLE" />
    <result column="soilindexpm25" property="soilindexpm25" jdbcType="DOUBLE" />
    <result column="soilindexpm10" property="soilindexpm10" jdbcType="DOUBLE" />
    <result column="surindex" property="surindex" jdbcType="DOUBLE" />
    <result column="noindex" property="noindex" jdbcType="DOUBLE" />
    <result column="pindex" property="pindex" jdbcType="DOUBLE" />
    <result column="pm25_emission" property="pm25Emission" jdbcType="DOUBLE" />
    <result column="pm10_emission" property="pm10Emission" jdbcType="DOUBLE" />
    <result column="voc_emission" property="vocEmission" jdbcType="DOUBLE" />
    <result column="nh3_emission" property="nh3Emission" jdbcType="DOUBLE" />
    <result column="so2_emission" property="so2Emission" jdbcType="DOUBLE" />
    <result column="co_emission" property="coEmission" jdbcType="DOUBLE" />
    <result column="oc_emission" property="ocEmission" jdbcType="DOUBLE" />
    <result column="bc_emission" property="bcEmission" jdbcType="DOUBLE" />
    <result column="nox_emission" property="noxEmission" jdbcType="DOUBLE" />
    <result column="pm25_max" property="pm25Max" jdbcType="DOUBLE" />
    <result column="pm10_max" property="pm10Max" jdbcType="DOUBLE" />
    <result column="voc_max" property="vocMax" jdbcType="DOUBLE" />
    <result column="nh3_max" property="nh3Max" jdbcType="DOUBLE" />
    <result column="so2_max" property="so2Max" jdbcType="DOUBLE" />
    <result column="co_max" property="coMax" jdbcType="DOUBLE" />
    <result column="oc_max" property="ocMax" jdbcType="DOUBLE" />
    <result column="bc_max" property="bcMax" jdbcType="DOUBLE" />
    <result column="nox_max" property="noxMax" jdbcType="DOUBLE" />
    <result column="scc_describe" property="sccDescribe" jdbcType="VARCHAR" />
    <result column="flag" property="flag" jdbcType="INTEGER" />
    <result column="COUNTY_NAME" property="countyName" jdbcType="CHAR" />
  </resultMap>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="nankai.xl.business.model.vo.XjsoildustVo" >
    SELECT xjsoildust.*,county.COUNTY_NAME FROM xjsoildust
    LEFT JOIN county
    ON xjsoildust.county_id=county.COUNTY_ID
    <where>
      <if test="sdYear != null and sdYear != ''">
        xjsoildust.sd_year = #{sdYear}
      </if>
      <if test="countyId != null and countyId != ''">
        AND xjsoildust.county_id = #{countyId}
      </if>
    </where>
  </select>
  <select id="selectById" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    SELECT xjsoildust.*,county.COUNTY_NAME FROM xjsoildust
    LEFT JOIN county
    ON xjsoildust.county_id=county.COUNTY_ID
    where xjsoildust.sd_id = #{sdId,jdbcType=INTEGER}
  </select>
  <delete id="deleteById" parameterType="java.lang.Integer" >
    delete from xjsoildust
    where sd_id = #{sdId,jdbcType=INTEGER}
  </delete>
  <insert id="insertOrUpdate" parameterType="nankai.xl.business.model.Xjsoildust" >
    insert into xjsoildust (sd_id, scccode, county_id, 
      sd_year, sd_takemeasures, sd_utype, 
      sd_soiltype, sd_area, soilindexpm25, 
      soilindexpm10, surindex, noindex, 
      pindex, pm25_emission, pm10_emission, 
      voc_emission, nh3_emission, so2_emission, 
      co_emission, oc_emission, bc_emission, 
      nox_emission, pm25_max, pm10_max, 
      voc_max, nh3_max, so2_max, 
      co_max, oc_max, bc_max, nox_max, 
      scc_describe, flag)
    values (#{sdId,jdbcType=INTEGER}, #{scccode,jdbcType=CHAR}, #{countyId,jdbcType=CHAR}, 
      #{sdYear,jdbcType=CHAR}, #{sdTakemeasures,jdbcType=VARCHAR}, #{sdUtype,jdbcType=VARCHAR}, 
      #{sdSoiltype,jdbcType=VARCHAR}, #{sdArea,jdbcType=DOUBLE}, #{soilindexpm25,jdbcType=DOUBLE}, 
      #{soilindexpm10,jdbcType=DOUBLE}, #{surindex,jdbcType=DOUBLE}, #{noindex,jdbcType=DOUBLE}, 
      #{pindex,jdbcType=DOUBLE}, #{pm25Emission,jdbcType=DOUBLE}, #{pm10Emission,jdbcType=DOUBLE}, 
      #{vocEmission,jdbcType=DOUBLE}, #{nh3Emission,jdbcType=DOUBLE}, #{so2Emission,jdbcType=DOUBLE}, 
      #{coEmission,jdbcType=DOUBLE}, #{ocEmission,jdbcType=DOUBLE}, #{bcEmission,jdbcType=DOUBLE}, 
      #{noxEmission,jdbcType=DOUBLE}, #{pm25Max,jdbcType=DOUBLE}, #{pm10Max,jdbcType=DOUBLE}, 
      #{vocMax,jdbcType=DOUBLE}, #{nh3Max,jdbcType=DOUBLE}, #{so2Max,jdbcType=DOUBLE}, 
      #{coMax,jdbcType=DOUBLE}, #{ocMax,jdbcType=DOUBLE}, #{bcMax,jdbcType=DOUBLE}, #{noxMax,jdbcType=DOUBLE}, 
      #{sccDescribe,jdbcType=VARCHAR}, #{flag,jdbcType=INTEGER})
    ON DUPLICATE KEY UPDATE 
      sd_id = #{sdId,jdbcType=INTEGER},
      scccode = #{scccode,jdbcType=CHAR},
      county_id = #{countyId,jdbcType=CHAR},
      sd_year = #{sdYear,jdbcType=CHAR},
      sd_takemeasures = #{sdTakemeasures,jdbcType=VARCHAR},
      sd_utype = #{sdUtype,jdbcType=VARCHAR},
      sd_soiltype = #{sdSoiltype,jdbcType=VARCHAR},
      sd_area = #{sdArea,jdbcType=DOUBLE},
      soilindexpm25 = #{soilindexpm25,jdbcType=DOUBLE},
      soilindexpm10 = #{soilindexpm10,jdbcType=DOUBLE},
      surindex = #{surindex,jdbcType=DOUBLE},
      noindex = #{noindex,jdbcType=DOUBLE},
      pindex = #{pindex,jdbcType=DOUBLE},
      pm25_emission = #{pm25Emission,jdbcType=DOUBLE},
      pm10_emission = #{pm10Emission,jdbcType=DOUBLE},
      voc_emission = #{vocEmission,jdbcType=DOUBLE},
      nh3_emission = #{nh3Emission,jdbcType=DOUBLE},
      so2_emission = #{so2Emission,jdbcType=DOUBLE},
      co_emission = #{coEmission,jdbcType=DOUBLE},
      oc_emission = #{ocEmission,jdbcType=DOUBLE},
      bc_emission = #{bcEmission,jdbcType=DOUBLE},
      nox_emission = #{noxEmission,jdbcType=DOUBLE},
      pm25_max = #{pm25Max,jdbcType=DOUBLE},
      pm10_max = #{pm10Max,jdbcType=DOUBLE},
      voc_max = #{vocMax,jdbcType=DOUBLE},
      nh3_max = #{nh3Max,jdbcType=DOUBLE},
      so2_max = #{so2Max,jdbcType=DOUBLE},
      co_max = #{coMax,jdbcType=DOUBLE},
      oc_max = #{ocMax,jdbcType=DOUBLE},
      bc_max = #{bcMax,jdbcType=DOUBLE},
      nox_max = #{noxMax,jdbcType=DOUBLE},
      scc_describe = #{sccDescribe,jdbcType=VARCHAR},
      flag = #{flag,jdbcType=INTEGER}   
  </insert>
  <update id="updateById" parameterType="nankai.xl.business.model.Xjsoildust" >
    update xjsoildust
    <set >
      <if test="scccode != null" >
        scccode = #{scccode,jdbcType=CHAR},
      </if>
      <if test="countyId != null" >
        county_id = #{countyId,jdbcType=CHAR},
      </if>
      <if test="sdYear != null" >
        sd_year = #{sdYear,jdbcType=CHAR},
      </if>
      <if test="sdTakemeasures != null" >
        sd_takemeasures = #{sdTakemeasures,jdbcType=VARCHAR},
      </if>
      <if test="sdUtype != null" >
        sd_utype = #{sdUtype,jdbcType=VARCHAR},
      </if>
      <if test="sdSoiltype != null" >
        sd_soiltype = #{sdSoiltype,jdbcType=VARCHAR},
      </if>
      <if test="sdArea != null" >
        sd_area = #{sdArea,jdbcType=DOUBLE},
      </if>
      <if test="soilindexpm25 != null" >
        soilindexpm25 = #{soilindexpm25,jdbcType=DOUBLE},
      </if>
      <if test="soilindexpm10 != null" >
        soilindexpm10 = #{soilindexpm10,jdbcType=DOUBLE},
      </if>
      <if test="surindex != null" >
        surindex = #{surindex,jdbcType=DOUBLE},
      </if>
      <if test="noindex != null" >
        noindex = #{noindex,jdbcType=DOUBLE},
      </if>
      <if test="pindex != null" >
        pindex = #{pindex,jdbcType=DOUBLE},
      </if>
      <if test="pm25Emission != null" >
        pm25_emission = #{pm25Emission,jdbcType=DOUBLE},
      </if>
      <if test="pm10Emission != null" >
        pm10_emission = #{pm10Emission,jdbcType=DOUBLE},
      </if>
      <if test="vocEmission != null" >
        voc_emission = #{vocEmission,jdbcType=DOUBLE},
      </if>
      <if test="nh3Emission != null" >
        nh3_emission = #{nh3Emission,jdbcType=DOUBLE},
      </if>
      <if test="so2Emission != null" >
        so2_emission = #{so2Emission,jdbcType=DOUBLE},
      </if>
      <if test="coEmission != null" >
        co_emission = #{coEmission,jdbcType=DOUBLE},
      </if>
      <if test="ocEmission != null" >
        oc_emission = #{ocEmission,jdbcType=DOUBLE},
      </if>
      <if test="bcEmission != null" >
        bc_emission = #{bcEmission,jdbcType=DOUBLE},
      </if>
      <if test="noxEmission != null" >
        nox_emission = #{noxEmission,jdbcType=DOUBLE},
      </if>
      <if test="pm25Max != null" >
        pm25_max = #{pm25Max,jdbcType=DOUBLE},
      </if>
      <if test="pm10Max != null" >
        pm10_max = #{pm10Max,jdbcType=DOUBLE},
      </if>
      <if test="vocMax != null" >
        voc_max = #{vocMax,jdbcType=DOUBLE},
      </if>
      <if test="nh3Max != null" >
        nh3_max = #{nh3Max,jdbcType=DOUBLE},
      </if>
      <if test="so2Max != null" >
        so2_max = #{so2Max,jdbcType=DOUBLE},
      </if>
      <if test="coMax != null" >
        co_max = #{coMax,jdbcType=DOUBLE},
      </if>
      <if test="ocMax != null" >
        oc_max = #{ocMax,jdbcType=DOUBLE},
      </if>
      <if test="bcMax != null" >
        bc_max = #{bcMax,jdbcType=DOUBLE},
      </if>
      <if test="noxMax != null" >
        nox_max = #{noxMax,jdbcType=DOUBLE},
      </if>
      <if test="sccDescribe != null" >
        scc_describe = #{sccDescribe,jdbcType=VARCHAR},
      </if>
      <if test="flag != null" >
        flag = #{flag,jdbcType=INTEGER},
      </if>
    </set>
    where sd_id = #{sdId,jdbcType=INTEGER}
  </update>
</mapper>