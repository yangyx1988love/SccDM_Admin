<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="nankai.xl.system.mapper.AdminuserMapper">
    <resultMap id="BaseResultMap" type="nankai.xl.system.model.Adminuser">
        <id column="user_id" jdbcType="INTEGER" property="userId"/>
        <result column="username" jdbcType="VARCHAR" property="username"/>
        <result column="password" jdbcType="VARCHAR" property="password"/>
        <result column="salt" jdbcType="VARCHAR" property="salt"/>
        <result column="email" jdbcType="VARCHAR" property="email"/>
        <result column="status" jdbcType="CHAR" property="status"/>
        <result column="last_login_time" jdbcType="TIMESTAMP" property="lastLoginTime"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="modify_time" jdbcType="TIMESTAMP" property="modifyTime"/>
        <result column="dept_id" jdbcType="VARCHAR" property="deptId"/>
        <result column="realname" jdbcType="VARCHAR" property="realname"/>
        <result column="mobilephone" jdbcType="VARCHAR" property="mobilephone"/>
        <result column="workphone" jdbcType="VARCHAR"  property="workphone"/>
    </resultMap>
    <sql id="Base_Column_List">
        user_id,
        username,
        password,
        salt,
        email,
        status,
        last_login_time,
        create_time,
        modify_time,
        active_code,
        dept_id,
        realname,
        mobilephone,
        workphone
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from adminuser
        where user_id = #{userId,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete
        from adminuser
        where user_id = #{userId,jdbcType=INTEGER}
    </delete>
    <insert id="insert" keyColumn="user_id" keyProperty="userId" parameterType="nankai.xl.system.model.Adminuser"
            useGeneratedKeys="true">
        insert into adminuser (username, password, salt,
                          email, status, last_login_time, active_code, dept_id)
        values (#{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{salt,jdbcType=VARCHAR},
                #{email,jdbcType=VARCHAR}, #{status,jdbcType=CHAR}, #{lastLoginTime,jdbcType=TIMESTAMP}, #{activeCode,jdbcType=VARCHAR}, #{deptId,jdbcType=VARCHAR}  )
    </insert>
    <insert id="insertSelective" keyColumn="user_id" keyProperty="userId" parameterType="nankai.xl.system.model.Adminuser"
            useGeneratedKeys="true">
        insert into adminuser
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="username != null">
                username,
            </if>
            <if test="password != null">
                password,
            </if>
            <if test="salt != null">
                salt,
            </if>
            <if test="email != null">
                email,
            </if>
            <if test="status != null">
                status,
            </if>
            <if test="lastLoginTime != null">
                last_login_time,
            </if>
            <if test="deptId != null">
                dept_id,
            </if>
            <if test="realname != null" >
                realname,
            </if>
            <if test="mobilephone != null" >
                mobilephone,
            </if>
            <if test="workphone != null" >
                workphone,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="username != null">
                #{username,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                #{password,jdbcType=VARCHAR},
            </if>
            <if test="salt != null">
                #{salt,jdbcType=VARCHAR},
            </if>
            <if test="email != null">
                #{email,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                #{status,jdbcType=CHAR},
            </if>
            <if test="lastLoginTime != null">
                #{lastLoginTime,jdbcType=TIMESTAMP},
            </if>
            <if test="deptId != null">
                #{deptId,jdbcType=VARCHAR}
            </if>
            <if test="realname != null" >
                #{realname,jdbcType=VARCHAR},
            </if>
            <if test="mobilephone != null" >
                #{mobilephone,jdbcType=VARCHAR},
            </if>
            <if test="workphone != null" >
                #{workphone,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="nankai.xl.system.model.Adminuser">
        update adminuser
        <set>
            <if test="username != null">
                username = #{username,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                password = #{password,jdbcType=VARCHAR},
            </if>
            <if test="salt != null">
                salt = #{salt,jdbcType=VARCHAR},
            </if>
            <if test="email != null">
                email = #{email,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                status = #{status,jdbcType=CHAR},
            </if>
            <if test="lastLoginTime != null">
                last_login_time = #{lastLoginTime,jdbcType=TIMESTAMP},
            </if>
            <if test="deptId != null">
                dept_id = #{deptId,jdbcType=VARCHAR}
            </if>
            <if test="realname != null" >
                realname = #{realname,jdbcType=VARCHAR},
            </if>
            <if test="mobilephone != null" >
                mobilephone = #{mobilephone,jdbcType=VARCHAR},
            </if>
            <if test="workphone != null" >
                workphone = #{workphone,jdbcType=VARCHAR},
            </if>
        </set>
        where user_id = #{userId,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="nankai.xl.system.model.Adminuser">
        update adminuser
        set username        = #{username,jdbcType=VARCHAR},
            password        = #{password,jdbcType=VARCHAR},
            salt            = #{salt,jdbcType=VARCHAR},
            email           = #{email,jdbcType=VARCHAR},
            status          = #{status,jdbcType=CHAR},
            last_login_time = #{lastLoginTime,jdbcType=TIMESTAMP},
            dept_id = #{deptId,jdbcType=VARCHAR},
            realname = #{realname,jdbcType=VARCHAR},
            mobilephone = #{mobilephone,jdbcType=VARCHAR},
            workphone = #{workphone,jdbcType=VARCHAR}
        where user_id = #{userId,jdbcType=INTEGER}
    </update>

    <select id="selectPermsByUserName" resultType="String" parameterType="String">
        select menu.perms
        from
             adminuser,
             sys_role,
             user_role,
             menu,
             role_menu
        where
            adminuser.user_id = user_role.user_id
          and
            sys_role.role_id = user_role.role_id
          and
            sys_role.role_id = role_menu.role_id
          and
            menu.menu_id = role_menu.menu_id
          and
            adminuser.username = #{username, jdbcType=VARCHAR}
    </select>

    <select id="selectRoleNameByUserName" resultType="String" parameterType="String">
        select sys_role.role_name
        from
             adminuser,
             sys_role,
             user_role
        where
            adminuser.user_id = user_role.user_id
          and
            sys_role.role_id = user_role.role_id
          and
            adminuser.username = #{username,jdbcType=VARCHAR}
    </select>

    <select id="selectOneByUserName" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from adminuser
        where username=#{username,jdbcType=VARCHAR} limit 1
    </select>

    <select id="selectAll" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from adminuser
    </select>

    <update id="updateStatusByPrimaryKey">
        update adminuser
        set status = #{status}
        where user_id = #{id}
    </update>

    <update id="updateLastLoginTimeByUsername">
        update adminuser
        set last_login_time = current_timestamp
        where username = #{username}
    </update>

    <select id="countByUserName" resultType="java.lang.Integer">
        select count(*)
        from adminuser where username = #{username}
    </select>

    <select id="countByUserNameNotIncludeUserId" resultType="java.lang.Integer">
        select count(*)
        from adminuser where username = #{username}  and user_id != #{userId}
    </select>

    <select id="selectRoleIdsByUserId" resultType="java.lang.Integer">
        select role_id from user_role where user_id = #{userId} ORDER BY role_id DESC
    </select>

    <select id="selectByActiveCode" resultMap="BaseResultMap">
        select <include refid="Base_Column_List"/> from adminuser where active_code = #{activeCode}
    </select>

    <select id="count" resultType="java.lang.Integer">
        select count(*) from adminuser
    </select>

    <select id="selectOperatorPermsByUserName" resultType="String" parameterType="String">
        select operator.perms
        from
            adminuser,
            sys_role,
            user_role,
            operator,
            role_operator
        where
            adminuser.user_id = user_role.user_id
          and
            sys_role.role_id = user_role.role_id
          and
            sys_role.role_id = role_operator.role_id
          and
            operator.operator_id = role_operator.operator_id
          and
            adminuser.username = #{username, jdbcType=VARCHAR}
    </select>

    <update id="updatePasswordByUserId">
        update adminuser
        set password = #{password}, salt = #{salt}
        where user_id = #{userId}
    </update>


    <select id="selectAllWithDept" resultMap="BaseResultMap">
        select
               u.user_id,
               u.username,
               u.password,
               u.salt,
               u.email,
               u.status,
               u.last_login_time,
               u.create_time,
               u.modify_time,
               u.active_code,
               u.dept_id,
               u.realname,
               u.mobilephone,
               u.workphone,
               d.dept_name
        from adminuser u
        left join dept d on u.dept_id = d.dept_id
    </select>

    <update id="activeUserByUserId">
        update adminuser
        set status = 1 where user_id = #{userId}
    </update>

</mapper>